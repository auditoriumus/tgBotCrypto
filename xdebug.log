[7] Log opened at 2022-03-23 18:28:55.947823
[7] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[7] [Step Debug] INFO: Connected to debugging client: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port). :-)
[7] [Step Debug] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/public/index.php" language="PHP" xdebug:language_version="8.0.2" protocol_version="1.0" appid="7"><engine version="3.1.3"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2022 by Derick Rethans]]></copyright></init>

[7] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" status="stopping" reason="ok"></response>

[7] [Step Debug] WARN: 2022-03-23 18:39:26.971540: There was a problem sending 179 bytes on socket 6: Broken pipe.
[7] Log closed at 2022-03-23 18:39:26.973495

[9] Log opened at 2022-03-24 06:53:48.345698
[9] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[9] [Step Debug] WARN: Creating socket for 'host.docker.internal:9003', poll success, but error: Operation now in progress (29).
[9] [Step Debug] ERR: Could not connect to debugging client. Tried: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port) :-(
[9] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[9] [Step Debug] WARN: Creating socket for 'host.docker.internal:9003', poll success, but error: Operation now in progress (29).
[9] [Step Debug] ERR: Could not connect to debugging client. Tried: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port) :-(
[9] Log closed at 2022-03-24 06:53:51.537530

[10] Log opened at 2022-03-24 06:56:51.295115
[10] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[10] [Step Debug] INFO: Connected to debugging client: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port). :-)
[10] [Step Debug] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/public/index.php" language="PHP" xdebug:language_version="8.0.2" protocol_version="1.0" appid="10"><engine version="3.1.3"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2022 by Derick Rethans]]></copyright></init>

[10] [Step Debug] <- feature_set -i 1 -n show_hidden -v 1
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="1" feature="show_hidden" success="1"></response>

[10] [Step Debug] <- feature_set -i 2 -n max_depth -v 1
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="2" feature="max_depth" success="1"></response>

[10] [Step Debug] <- feature_set -i 3 -n max_children -v 100
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="3" feature="max_children" success="1"></response>

[10] [Step Debug] <- feature_set -i 4 -n extended_properties -v 1
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="4" feature="extended_properties" success="1"></response>

[10] [Step Debug] <- feature_set -i 5 -n notify_ok -v 1
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="5" feature="notify_ok" success="1"></response>

[10] [Step Debug] <- feature_set -i 6 -n resolved_breakpoints -v 1
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="6" feature="resolved_breakpoints" success="1"></response>

[10] [Step Debug] <- stdout -i 7 -c 1
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stdout" transaction_id="7" success="1"></response>

[10] [Step Debug] <- status -i 8
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="status" transaction_id="8" status="starting" reason="ok"></response>

[10] [Step Debug] <- step_into -i 9
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="step_into" transaction_id="9" status="break" reason="ok"><xdebug:message filename="file:///var/www/public/index.php" lineno="6"></xdebug:message></response>

[10] [Step Debug] <- eval -i 10 -- aXNzZXQoJF9TRVJWRVJbJ1BIUF9JREVfQ09ORklHJ10p
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="10"><property type="bool"><![CDATA[0]]></property></response>

[10] [Step Debug] <- eval -i 11 -- aXNzZXQoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10p
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="11"><property type="bool"><![CDATA[1]]></property></response>

[10] [Step Debug] <- eval -i 12 -- KHN0cmluZykoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10p
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="12"><property type="string" size="9" encoding="base64"><![CDATA[bG9jYWxob3N0]]></property></response>

[10] [Step Debug] <- eval -i 13 -- KHN0cmluZykoJF9TRVJWRVJbJ1NFUlZFUl9QT1JUJ10p
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="13"><property type="string" size="2" encoding="base64"><![CDATA[ODA=]]></property></response>

[10] [Step Debug] <- eval -i 14 -- KHN0cmluZykoJF9TRVJWRVJbJ1JFUVVFU1RfVVJJJ10p
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="14"><property type="string" size="5" encoding="base64"><![CDATA[L2xvdHM=]]></property></response>

[10] [Step Debug] <- breakpoint_set -i 15 -t call -m App\Http\Controllers\WebSiteControllers\LotController::index
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="breakpoint_set" transaction_id="15" id="100001" resolved="resolved"></response>

[10] [Step Debug] <- stack_get -i 16
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stack_get" transaction_id="16"><stack where="{main}" level="0" type="file" filename="file:///var/www/public/index.php" lineno="6"></stack></response>

[10] [Step Debug] <- run -i 17
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="run" transaction_id="17" status="break" reason="ok"><xdebug:message filename="file:///var/www/app/Http/Controllers/WebSiteControllers/LotController.php" lineno="20"></xdebug:message></response>

[10] [Step Debug] <- stack_get -i 18
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stack_get" transaction_id="18"><stack where="App\Http\Controllers\WebSiteControllers\LotController-&gt;index" level="0" type="file" filename="file:///var/www/app/Http/Controllers/WebSiteControllers/LotController.php" lineno="20"></stack><stack where="Illuminate\Routing\Controller-&gt;callAction" level="1" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Routing/Controller.php" lineno="54"></stack><stack where="Illuminate\Routing\ControllerDispatcher-&gt;dispatch" level="2" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php" lineno="45"></stack><stack where="Illuminate\Routing\Route-&gt;runController" level="3" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Routing/Route.php" lineno="261"></stack><stack where="Illuminate\Routing\Route-&gt;run" level="4" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Routing/Route.php" lineno="204"></stack><stack where="Illuminate\Routing\Router-&gt;Illuminate\Routing\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Routing/Router.php:723-727}" level="5" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Routing/Router.php" lineno="725"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:126-132}" level="6" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="128"></stack><stack where="Illuminate\Routing\Middleware\SubstituteBindings-&gt;handle" level="7" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php" lineno="50"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:143-174}" level="8" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="167"></stack><stack where="Illuminate\Foundation\Http\Middleware\VerifyCsrfToken-&gt;handle" level="9" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php" lineno="78"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:143-174}" level="10" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="167"></stack><stack where="Illuminate\View\Middleware\ShareErrorsFromSession-&gt;handle" level="11" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php" lineno="49"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:143-174}" level="12" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="167"></stack><stack where="Illuminate\Session\Middleware\StartSession-&gt;handleStatefulRequest" level="13" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php" lineno="121"></stack><stack where="Illuminate\Session\Middleware\StartSession-&gt;handle" level="14" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php" lineno="64"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:143-174}" level="15" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="167"></stack><stack where="Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse-&gt;handle" level="16" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php" lineno="37"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:143-174}" level="17" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="167"></stack><stack where="Illuminate\Cookie\Middleware\EncryptCookies-&gt;handle" level="18" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php" lineno="67"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:143-174}" level="19" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="167"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;then" level="20" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="103"></stack><stack where="Illuminate\Routing\Router-&gt;runRouteWithinStack" level="21" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Routing/Router.php" lineno="727"></stack><stack where="Illuminate\Routing\Router-&gt;runRoute" level="22" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Routing/Router.php" lineno="702"></stack><stack where="Illuminate\Routing\Router-&gt;dispatchToRoute" level="23" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Routing/Router.php" lineno="666"></stack><stack where="Illuminate\Routing\Router-&gt;dispatch" level="24" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Routing/Router.php" lineno="655"></stack><stack where="Illuminate\Foundation\Http\Kernel-&gt;Illuminate\Foundation\Http\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:164-168}" level="25" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php" lineno="167"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:126-132}" level="26" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="128"></stack><stack where="Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle" level="27" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php" lineno="21"></stack><stack where="Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull-&gt;handle" level="28" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php" lineno="31"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:143-174}" level="29" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="167"></stack><stack where="Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle" level="30" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php" lineno="21"></stack><stack where="Illuminate\Foundation\Http\Middleware\TrimStrings-&gt;handle" level="31" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php" lineno="40"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:143-174}" level="32" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="167"></stack><stack where="Illuminate\Foundation\Http\Middleware\ValidatePostSize-&gt;handle" level="33" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php" lineno="27"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:143-174}" level="34" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="167"></stack><stack where="Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance-&gt;handle" level="35" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php" lineno="86"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:143-174}" level="36" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="167"></stack><stack where="Fruitcake\Cors\HandleCors-&gt;handle" level="37" type="file" filename="file:///var/www/vendor/fruitcake/laravel-cors/src/HandleCors.php" lineno="38"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:143-174}" level="38" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="167"></stack><stack where="Illuminate\Http\Middleware\TrustProxies-&gt;handle" level="39" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php" lineno="39"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure:/var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:143-174}" level="40" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="167"></stack><stack where="Illuminate\Pipeline\Pipeline-&gt;then" level="41" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php" lineno="103"></stack><stack where="Illuminate\Foundation\Http\Kernel-&gt;sendRequestThroughRouter" level="42" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php" lineno="142"></stack><stack where="Illuminate\Foundation\Http\Kernel-&gt;handle" level="43" type="file" filename="file:///var/www/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php" lineno="111"></stack><stack where="{main}" level="44" type="file" filename="file:///var/www/public/index.php" lineno="52"></stack></response>

[10] [Step Debug] <- context_names -i 19
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="context_names" transaction_id="19"><context name="Locals" id="0"></context><context name="Superglobals" id="1"></context><context name="User defined constants" id="2"></context></response>

[10] [Step Debug] <- context_get -i 20 -d 0 -c 0
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="context_get" transaction_id="20" context="0"><property name="$lots" fullname="$lots" type="uninitialized"></property><property name="$this" fullname="$this" type="object" classname="App\Http\Controllers\WebSiteControllers\LotController" children="1" numchildren="1" page="0" pagesize="100"><property name="middleware" fullname="$this-&gt;middleware" facet="protected" type="array" children="0" numchildren="0"></property></property></response>

[10] [Step Debug] <- context_get -i 21 -d 0 -c 1
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="context_get" transaction_id="21" context="1"><property name="$_COOKIE" fullname="$_COOKIE" type="array" children="1" numchildren="2" page="0" pagesize="100"><property name="XSRF-TOKEN" fullname="$_COOKIE[&quot;XSRF-TOKEN&quot;]" type="string" size="340" encoding="base64"><![CDATA[ZXlKcGRpSTZJbmhxYVU0emNFcHVlSHBpV0drNFVVTXpiVmRzZUVFOVBTSXNJblpoYkhWbElqb2lOV0pKTkhBeFpuaDRWakJ6U3lzM1ZEWnhRM0U0UlU1V1pURnNVRTh4YzFsc1pIVmFRMkZ2T1dnNE9YaGtTRloyVmk5MldVeFJRbWR5V0U1Qk5EQkVSazV0WWxKWVlYRlFSMHhoT0hoWFZHeFFaa2hzWVd4NUx6Rm9XbVZGTm1kUk56Vm1kRkpKZVRoS1QxcHVhVTV1TDNoRFRsQlZORWxaVmxKdE1UZG5ZMW9pTENKdFlXTWlPaUk0WmpRME56UXpOREF4T0RreVlqVXlPR1JqTkRRek9HSTJaR1V5TUdRMVpUazBOVGN4TVdaaU0yVmlNalUwWkRsaE1qYzJOVGc1TjJSa00yUXpNRGhqSWl3aWRHRm5Jam9pSW4wPQ==]]></property><property name="laravel_session" fullname="$_COOKIE[&quot;laravel_session&quot;]" type="string" size="340" encoding="base64"><![CDATA[ZXlKcGRpSTZJalEzZUVWR1dYUnVZa1I0VERsVFdHOU5NMkpEZFhjOVBTSXNJblpoYkhWbElqb2lSVVZhZW01c1pISjFWMUV2Y0RCS1NrOHdSbGxtU1RscWRrcEhSMUF5UlU5T2FuUTRaVnBZTkZkaGQybDFORWN6UlRnMWJEZ3dkV3BSZDNGdVZIbGFSV0ZWUzFBNFEyUXZXREZLVkc5M1NWVlJkbTFpVmtOUk1FMW9RMXBsYUZGM2RVSlRUemN6TDNCa1YyVkhVVmMxT1dadGRpdFVlRkJUWW5kT1RsUXhSVTRpTENKdFlXTWlPaUkxTlRNNE4yRTRPVEptT1dSbFpUWmpOV0UwWkRJME16ZzRNR1kwT1dNeE1HRXpOakprTWpJeU5XUXpOV1ZqTldRMU5EQTJZVEkyTURKbFpUUTFORGt6SWl3aWRHRm5Jam9pSW4wPQ==]]></property></property><property name="$_ENV" fullname="$_ENV" type="array" children="1" numchildren="90" page="0" pagesize="100"><property name="PHP_EXTRA_CONFIGURE_ARGS" fullname="$_ENV[&quot;PHP_EXTRA_CONFIGURE_ARGS&quot;]" type="string" size="77" encoding="base64"><![CDATA[LS1lbmFibGUtZnBtIC0td2l0aC1mcG0tdXNlcj13d3ctZGF0YSAtLXdpdGgtZnBtLWdyb3VwPXd3dy1kYXRhIC0tZGlzYWJsZS1jZ2k=]]></property><property name="HOSTNAME" fullname="$_ENV[&quot;HOSTNAME&quot;]" type="string" size="12" encoding="base64"><![CDATA[MGQ5OGIzODFjMTNm]]></property><property name="PHP_INI_DIR" fullname="$_ENV[&quot;PHP_INI_DIR&quot;]" type="string" size="18" encoding="base64"><![CDATA[L3Vzci9sb2NhbC9ldGMvcGhw]]></property><property name="HOME" fullname="$_ENV[&quot;HOME&quot;]" type="string" size="8" encoding="base64"><![CDATA[L3Zhci93d3c=]]></property><property name="PHP_LDFLAGS" fullname="$_ENV[&quot;PHP_LDFLAGS&quot;]" type="string" size="12" encoding="base64"><![CDATA[LVdsLC1PMSAtcGll]]></property><property name="PHP_CFLAGS" fullname="$_ENV[&quot;PHP_CFLAGS&quot;]" type="string" size="83" encoding="base64"><![CDATA[LWZzdGFjay1wcm90ZWN0b3Itc3Ryb25nIC1mcGljIC1mcGllIC1PMiAtRF9MQVJHRUZJTEVfU09VUkNFIC1EX0ZJTEVfT0ZGU0VUX0JJVFM9NjQ=]]></property><property name="PHP_VERSION" fullname="$_ENV[&quot;PHP_VERSION&quot;]" type="string" size="5" encoding="base64"><![CDATA[OC4wLjI=]]></property><property name="GPG_KEYS" fullname="$_ENV[&quot;GPG_KEYS&quot;]" type="string" size="81" encoding="base64"><![CDATA[MTcyOUY4MzkzOERBNDRFMjdCQTBGNEQzREJEQjM5NzQ3MEQxMjE3MiBCRkRERDI4NjQyODI0RjgxMThFRjc3OTA5QjY3QTVDMTIyMjkxMThG]]></property><property name="PHP_CPPFLAGS" fullname="$_ENV[&quot;PHP_CPPFLAGS&quot;]" type="string" size="83" encoding="base64"><![CDATA[LWZzdGFjay1wcm90ZWN0b3Itc3Ryb25nIC1mcGljIC1mcGllIC1PMiAtRF9MQVJHRUZJTEVfU09VUkNFIC1EX0ZJTEVfT0ZGU0VUX0JJVFM9NjQ=]]></property><property name="PHP_ASC_URL" fullname="$_ENV[&quot;PHP_ASC_URL&quot;]" type="string" size="58" encoding="base64"><![CDATA[aHR0cHM6Ly93d3cucGhwLm5ldC9kaXN0cmlidXRpb25zL3BocC04LjAuMi50YXIueHouYXNjP2E9MQ==]]></property><property name="PHP_URL" fullname="$_ENV[&quot;PHP_URL&quot;]" type="string" size="54" encoding="base64"><![CDATA[aHR0cHM6Ly93d3cucGhwLm5ldC9kaXN0cmlidXRpb25zL3BocC04LjAuMi50YXIueHo/YT0x]]></property><property name="PATH" fullname="$_ENV[&quot;PATH&quot;]" type="string" size="60" encoding="base64"><![CDATA[L3Vzci9sb2NhbC9zYmluOi91c3IvbG9jYWwvYmluOi91c3Ivc2JpbjovdXNyL2Jpbjovc2JpbjovYmlu]]></property><property type="string" size="76"><name encoding="base64"><![CDATA[UEhQSVpFX0RFUFM=]]></name><fullname encoding="base64"><![CDATA[JF9FTlZbIlBIUElaRV9ERVBTIl0=]]></fullname><value encoding="base64"><![CDATA[YXV0b2NvbmYgCQlkcGtnLWRldiAJCWZpbGUgCQlnKysgCQlnY2MgCQlsaWJjLWRldiAJCW1ha2UgCQlwa2ctY29uZmlnIAkJcmUyYw==]]></value></property><property name="PWD" fullname="$_ENV[&quot;PWD&quot;]" type="string" size="8" encoding="base64"><![CDATA[L3Zhci93d3c=]]></property><property name="PHP_SHA256" fullname="$_ENV[&quot;PHP_SHA256&quot;]" type="string" size="64" encoding="base64"><![CDATA[ODRkZDZlMzZmNDhjM2E3MWZmNWRjZWJhMzc1YzFmNmIzNGI3MWQ0ZmE5ZTA2YjcyMDc4MDEyNzE3NjQ2OGNjYw==]]></property><property name="USER" fullname="$_ENV[&quot;USER&quot;]" type="string" size="8" encoding="base64"><![CDATA[d3d3LWRhdGE=]]></property><property name="HTTP_ACCEPT_ENCODING" fullname="$_ENV[&quot;HTTP_ACCEPT_ENCODING&quot;]" type="string" size="13" encoding="base64"><![CDATA[Z3ppcCwgZGVmbGF0ZQ==]]></property><property name="HTTP_ACCEPT_LANGUAGE" fullname="$_ENV[&quot;HTTP_ACCEPT_LANGUAGE&quot;]" type="string" size="2" encoding="base64"><![CDATA[cnU=]]></property><property name="HTTP_REFERER" fullname="$_ENV[&quot;HTTP_REFERER&quot;]" type="string" size="20" encoding="base64"><![CDATA[aHR0cDovL2xvY2FsaG9zdDo4MS8=]]></property><property name="HTTP_USER_AGENT" fullname="$_ENV[&quot;HTTP_USER_AGENT&quot;]" type="string" size="117" encoding="base64"><![CDATA[TW96aWxsYS81LjAgKE1hY2ludG9zaDsgSW50ZWwgTWFjIE9TIFggMTBfMTVfNykgQXBwbGVXZWJLaXQvNjA1LjEuMTUgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzE1LjMgU2FmYXJpLzYwNS4xLjE1]]></property><property name="HTTP_ACCEPT" fullname="$_ENV[&quot;HTTP_ACCEPT&quot;]" type="string" size="63" encoding="base64"><![CDATA[dGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksKi8qO3E9MC44]]></property><property name="HTTP_UPGRADE_INSECURE_REQUESTS" fullname="$_ENV[&quot;HTTP_UPGRADE_INSECURE_REQUESTS&quot;]" type="string" size="1" encoding="base64"><![CDATA[MQ==]]></property><property name="HTTP_CONNECTION" fullname="$_ENV[&quot;HTTP_CONNECTION&quot;]" type="string" size="10" encoding="base64"><![CDATA[a2VlcC1hbGl2ZQ==]]></property><property name="HTTP_COOKIE" fullname="$_ENV[&quot;HTTP_COOKIE&quot;]" type="string" size="713" encoding="base64"><![CDATA[WFNSRi1UT0tFTj1leUpwZGlJNkluaHFhVTR6Y0VwdWVIcGlXR2s0VVVNemJWZHNlRUU5UFNJc0luWmhiSFZsSWpvaU5XSkpOSEF4Wm5oNFZqQnpTeXMzVkRaeFEzRTRSVTVXWlRGc1VFOHhjMWxzWkhWYVEyRnZPV2c0T1hoa1NGWjJWaTkyV1V4UlFtZHlXRTVCTkRCRVJrNXRZbEpZWVhGUVIweGhPSGhYVkd4UVpraHNZV3g1THpGb1dtVkZObWRSTnpWbWRGSkplVGhLVDFwdWFVNXVMM2hEVGxCVk5FbFpWbEp0TVRkblkxb2lMQ0p0WVdNaU9pSTRaalEwTnpRek5EQXhPRGt5WWpVeU9HUmpORFF6T0dJMlpHVXlNR1ExWlRrME5UY3hNV1ppTTJWaU1qVTBaRGxoTWpjMk5UZzVOMlJrTTJRek1EaGpJaXdpZEdGbklqb2lJbjAlM0Q7IGxhcmF2ZWxfc2Vzc2lvbj1leUpwZGlJNklqUTNlRVZHV1hSdVlrUjRURGxUV0c5Tk0ySkRkWGM5UFNJc0luWmhiSFZsSWpvaVJVVmFlbTVzWkhKMVYxRXZjREJLU2s4d1JsbG1TVGxxZGtwSFIxQXlSVTlPYW5RNFpWcFlORmRoZDJsMU5FY3pSVGcxYkRnd2RXcFJkM0Z1VkhsYVJXRlZTMUE0UTJRdldERktWRzkzU1ZWUmRtMWlWa05STUUxb1ExcGxhRkYzZFVKVFR6Y3pMM0JrVjJWSFVWYzFPV1p0ZGl0VWVGQlRZbmRPVGxReFJVNGlMQ0p0WVdNaU9pSTFOVE00TjJFNE9USm1PV1JsWlRaak5XRTBaREkwTXpnNE1HWTBPV014TUdFek5qSmtNakl5TldRek5XVmpOV1ExTkRBMllUSTJNREpsWlRRMU5Ea3pJaXdpZEdGbklqb2lJbjAlM0Q=]]></property><property name="HTTP_HOST" fullname="$_ENV[&quot;HTTP_HOST&quot;]" type="string" size="12" encoding="base64"><![CDATA[bG9jYWxob3N0Ojgx]]></property><property name="PATH_INFO" fullname="$_ENV[&quot;PATH_INFO&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="SCRIPT_FILENAME" fullname="$_ENV[&quot;SCRIPT_FILENAME&quot;]" type="string" size="25" encoding="base64"><![CDATA[L3Zhci93d3cvcHVibGljL2luZGV4LnBocA==]]></property><property name="REDIRECT_STATUS" fullname="$_ENV[&quot;REDIRECT_STATUS&quot;]" type="string" size="3" encoding="base64"><![CDATA[MjAw]]></property><property name="SERVER_NAME" fullname="$_ENV[&quot;SERVER_NAME&quot;]" type="string" size="9" encoding="base64"><![CDATA[bG9jYWxob3N0]]></property><property name="SERVER_PORT" fullname="$_ENV[&quot;SERVER_PORT&quot;]" type="string" size="2" encoding="base64"><![CDATA[ODA=]]></property><property name="SERVER_ADDR" fullname="$_ENV[&quot;SERVER_ADDR&quot;]" type="string" size="10" encoding="base64"><![CDATA[MTcyLjIwLjAuNA==]]></property><property name="REMOTE_PORT" fullname="$_ENV[&quot;REMOTE_PORT&quot;]" type="string" size="5" encoding="base64"><![CDATA[NjA4MzI=]]></property><property name="REMOTE_ADDR" fullname="$_ENV[&quot;REMOTE_ADDR&quot;]" type="string" size="10" encoding="base64"><![CDATA[MTcyLjIwLjAuMQ==]]></property><property name="SERVER_SOFTWARE" fullname="$_ENV[&quot;SERVER_SOFTWARE&quot;]" type="string" size="12" encoding="base64"><![CDATA[bmdpbngvMS4yMS42]]></property><property name="GATEWAY_INTERFACE" fullname="$_ENV[&quot;GATEWAY_INTERFACE&quot;]" type="string" size="7" encoding="base64"><![CDATA[Q0dJLzEuMQ==]]></property><property name="REQUEST_SCHEME" fullname="$_ENV[&quot;REQUEST_SCHEME&quot;]" type="string" size="4" encoding="base64"><![CDATA[aHR0cA==]]></property><property name="SERVER_PROTOCOL" fullname="$_ENV[&quot;SERVER_PROTOCOL&quot;]" type="string" size="8" encoding="base64"><![CDATA[SFRUUC8xLjE=]]></property><property name="DOCUMENT_ROOT" fullname="$_ENV[&quot;DOCUMENT_ROOT&quot;]" type="string" size="15" encoding="base64"><![CDATA[L3Zhci93d3cvcHVibGlj]]></property><property name="DOCUMENT_URI" fullname="$_ENV[&quot;DOCUMENT_URI&quot;]" type="string" size="10" encoding="base64"><![CDATA[L2luZGV4LnBocA==]]></property><property name="REQUEST_URI" fullname="$_ENV[&quot;REQUEST_URI&quot;]" type="string" size="5" encoding="base64"><![CDATA[L2xvdHM=]]></property><property name="SCRIPT_NAME" fullname="$_ENV[&quot;SCRIPT_NAME&quot;]" type="string" size="10" encoding="base64"><![CDATA[L2luZGV4LnBocA==]]></property><property name="CONTENT_LENGTH" fullname="$_ENV[&quot;CONTENT_LENGTH&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="CONTENT_TYPE" fullname="$_ENV[&quot;CONTENT_TYPE&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="REQUEST_METHOD" fullname="$_ENV[&quot;REQUEST_METHOD&quot;]" type="string" size="3" encoding="base64"><![CDATA[R0VU]]></property><property name="QUERY_STRING" fullname="$_ENV[&quot;QUERY_STRING&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="FCGI_ROLE" fullname="$_ENV[&quot;FCGI_ROLE&quot;]" type="string" size="9" encoding="base64"><![CDATA[UkVTUE9OREVS]]></property><property name="APP_NAME" fullname="$_ENV[&quot;APP_NAME&quot;]" type="string" size="7" encoding="base64"><![CDATA[TGFyYXZlbA==]]></property><property name="APP_ENV" fullname="$_ENV[&quot;APP_ENV&quot;]" type="string" size="5" encoding="base64"><![CDATA[bG9jYWw=]]></property><property name="APP_KEY" fullname="$_ENV[&quot;APP_KEY&quot;]" type="string" size="51" encoding="base64"><![CDATA[YmFzZTY0OlY3ekpCMzBRYmJNTDRRUnR4NU1TZmIxbVllMG8ydTRsYnBVbEdxaHpHY1E9]]></property><property name="APP_DEBUG" fullname="$_ENV[&quot;APP_DEBUG&quot;]" type="string" size="4" encoding="base64"><![CDATA[dHJ1ZQ==]]></property><property name="APP_URL" fullname="$_ENV[&quot;APP_URL&quot;]" type="string" size="16" encoding="base64"><![CDATA[aHR0cDovL2xvY2FsaG9zdA==]]></property><property name="TG_TOKEN" fullname="$_ENV[&quot;TG_TOKEN&quot;]" type="string" size="46" encoding="base64"><![CDATA[MjAyMDE4MjA2NDpBQUY4UG9GUVF2TXFtX0Q2ZDdzZGpKZk1YUWY4ZmtxeVJUbw==]]></property><property name="LOG_CHANNEL" fullname="$_ENV[&quot;LOG_CHANNEL&quot;]" type="string" size="5" encoding="base64"><![CDATA[c3RhY2s=]]></property><property name="LOG_DEPRECATIONS_CHANNEL" fullname="$_ENV[&quot;LOG_DEPRECATIONS_CHANNEL&quot;]" type="string" size="4" encoding="base64"><![CDATA[bnVsbA==]]></property><property name="LOG_LEVEL" fullname="$_ENV[&quot;LOG_LEVEL&quot;]" type="string" size="5" encoding="base64"><![CDATA[ZGVidWc=]]></property><property name="DB_CONNECTION" fullname="$_ENV[&quot;DB_CONNECTION&quot;]" type="string" size="5" encoding="base64"><![CDATA[cGdzcWw=]]></property><property name="DB_HOST" fullname="$_ENV[&quot;DB_HOST&quot;]" type="string" size="8" encoding="base64"><![CDATA[ZGItcGdzcWw=]]></property><property name="DB_PORT" fullname="$_ENV[&quot;DB_PORT&quot;]" type="string" size="4" encoding="base64"><![CDATA[NTQzMg==]]></property><property name="DB_DATABASE" fullname="$_ENV[&quot;DB_DATABASE&quot;]" type="string" size="6" encoding="base64"><![CDATA[Y3J5cHRv]]></property><property name="DB_USERNAME" fullname="$_ENV[&quot;DB_USERNAME&quot;]" type="string" size="8" encoding="base64"><![CDATA[cG9zdGdyZXM=]]></property><property name="DB_PASSWORD" fullname="$_ENV[&quot;DB_PASSWORD&quot;]" type="string" size="10" encoding="base64"><![CDATA[UXExMjM0NTY3OA==]]></property><property name="BROADCAST_DRIVER" fullname="$_ENV[&quot;BROADCAST_DRIVER&quot;]" type="string" size="3" encoding="base64"><![CDATA[bG9n]]></property><property name="CACHE_DRIVER" fullname="$_ENV[&quot;CACHE_DRIVER&quot;]" type="string" size="4" encoding="base64"><![CDATA[ZmlsZQ==]]></property><property name="FILESYSTEM_DISK" fullname="$_ENV[&quot;FILESYSTEM_DISK&quot;]" type="string" size="5" encoding="base64"><![CDATA[bG9jYWw=]]></property><property name="QUEUE_CONNECTION" fullname="$_ENV[&quot;QUEUE_CONNECTION&quot;]" type="string" size="4" encoding="base64"><![CDATA[c3luYw==]]></property><property name="SESSION_DRIVER" fullname="$_ENV[&quot;SESSION_DRIVER&quot;]" type="string" size="4" encoding="base64"><![CDATA[ZmlsZQ==]]></property><property name="SESSION_LIFETIME" fullname="$_ENV[&quot;SESSION_LIFETIME&quot;]" type="string" size="3" encoding="base64"><![CDATA[MTIw]]></property><property name="MEMCACHED_HOST" fullname="$_ENV[&quot;MEMCACHED_HOST&quot;]" type="string" size="9" encoding="base64"><![CDATA[MTI3LjAuMC4x]]></property><property name="REDIS_HOST" fullname="$_ENV[&quot;REDIS_HOST&quot;]" type="string" size="9" encoding="base64"><![CDATA[MTI3LjAuMC4x]]></property><property name="REDIS_PASSWORD" fullname="$_ENV[&quot;REDIS_PASSWORD&quot;]" type="string" size="4" encoding="base64"><![CDATA[bnVsbA==]]></property><property name="REDIS_PORT" fullname="$_ENV[&quot;REDIS_PORT&quot;]" type="string" size="4" encoding="base64"><![CDATA[NjM3OQ==]]></property><property name="MAIL_MAILER" fullname="$_ENV[&quot;MAIL_MAILER&quot;]" type="string" size="4" encoding="base64"><![CDATA[c210cA==]]></property><property name="MAIL_HOST" fullname="$_ENV[&quot;MAIL_HOST&quot;]" type="string" size="7" encoding="base64"><![CDATA[bWFpbGhvZw==]]></property><property name="MAIL_PORT" fullname="$_ENV[&quot;MAIL_PORT&quot;]" type="string" size="4" encoding="base64"><![CDATA[MTAyNQ==]]></property><property name="MAIL_USERNAME" fullname="$_ENV[&quot;MAIL_USERNAME&quot;]" type="string" size="4" encoding="base64"><![CDATA[bnVsbA==]]></property><property name="MAIL_PASSWORD" fullname="$_ENV[&quot;MAIL_PASSWORD&quot;]" type="string" size="4" encoding="base64"><![CDATA[bnVsbA==]]></property><property name="MAIL_ENCRYPTION" fullname="$_ENV[&quot;MAIL_ENCRYPTION&quot;]" type="string" size="4" encoding="base64"><![CDATA[bnVsbA==]]></property><property name="MAIL_FROM_ADDRESS" fullname="$_ENV[&quot;MAIL_FROM_ADDRESS&quot;]" type="string" size="17" encoding="base64"><![CDATA[aGVsbG9AZXhhbXBsZS5jb20=]]></property><property name="MAIL_FROM_NAME" fullname="$_ENV[&quot;MAIL_FROM_NAME&quot;]" type="string" size="7" encoding="base64"><![CDATA[TGFyYXZlbA==]]></property><property name="AWS_ACCESS_KEY_ID" fullname="$_ENV[&quot;AWS_ACCESS_KEY_ID&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="AWS_SECRET_ACCESS_KEY" fullname="$_ENV[&quot;AWS_SECRET_ACCESS_KEY&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="AWS_DEFAULT_REGION" fullname="$_ENV[&quot;AWS_DEFAULT_REGION&quot;]" type="string" size="9" encoding="base64"><![CDATA[dXMtZWFzdC0x]]></property><property name="AWS_BUCKET" fullname="$_ENV[&quot;AWS_BUCKET&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="AWS_USE_PATH_STYLE_ENDPOINT" fullname="$_ENV[&quot;AWS_USE_PATH_STYLE_ENDPOINT&quot;]" type="string" size="5" encoding="base64"><![CDATA[ZmFsc2U=]]></property><property name="PUSHER_APP_ID" fullname="$_ENV[&quot;PUSHER_APP_ID&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="PUSHER_APP_KEY" fullname="$_ENV[&quot;PUSHER_APP_KEY&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="PUSHER_APP_SECRET" fullname="$_ENV[&quot;PUSHER_APP_SECRET&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="PUSHER_APP_CLUSTER" fullname="$_ENV[&quot;PUSHER_APP_CLUSTER&quot;]" type="string" size="3" encoding="base64"><![CDATA[bXQx]]></property><property name="MIX_PUSHER_APP_KEY" fullname="$_ENV[&quot;MIX_PUSHER_APP_KEY&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="MIX_PUSHER_APP_CLUSTER" fullname="$_ENV[&quot;MIX_PUSHER_APP_CLUSTER&quot;]" type="string" size="3" encoding="base64"><![CDATA[bXQx]]></property></property><property name="$_FILES" fullname="$_FILES" type="array" children="0" numchildren="0" page="0" pagesize="100"></property><property name="$_GET" fullname="$_GET" type="array" children="0" numchildren="0" page="0" pagesize="100"></property><property name="$_POST" fullname="$_POST" type="array" children="0" numchildren="0" page="0" pagesize="100"></property><property name="$_REQUEST" fullname="$_REQUEST" type="array" children="1" numchildren="2" page="0" pagesize="100"><property name="XSRF-TOKEN" fullname="$_REQUEST[&quot;XSRF-TOKEN&quot;]" type="string" size="340" encoding="base64"><![CDATA[ZXlKcGRpSTZJbmhxYVU0emNFcHVlSHBpV0drNFVVTXpiVmRzZUVFOVBTSXNJblpoYkhWbElqb2lOV0pKTkhBeFpuaDRWakJ6U3lzM1ZEWnhRM0U0UlU1V1pURnNVRTh4YzFsc1pIVmFRMkZ2T1dnNE9YaGtTRloyVmk5MldVeFJRbWR5V0U1Qk5EQkVSazV0WWxKWVlYRlFSMHhoT0hoWFZHeFFaa2hzWVd4NUx6Rm9XbVZGTm1kUk56Vm1kRkpKZVRoS1QxcHVhVTV1TDNoRFRsQlZORWxaVmxKdE1UZG5ZMW9pTENKdFlXTWlPaUk0WmpRME56UXpOREF4T0RreVlqVXlPR1JqTkRRek9HSTJaR1V5TUdRMVpUazBOVGN4TVdaaU0yVmlNalUwWkRsaE1qYzJOVGc1TjJSa00yUXpNRGhqSWl3aWRHRm5Jam9pSW4wPQ==]]></property><property name="laravel_session" fullname="$_REQUEST[&quot;laravel_session&quot;]" type="string" size="340" encoding="base64"><![CDATA[ZXlKcGRpSTZJalEzZUVWR1dYUnVZa1I0VERsVFdHOU5NMkpEZFhjOVBTSXNJblpoYkhWbElqb2lSVVZhZW01c1pISjFWMUV2Y0RCS1NrOHdSbGxtU1RscWRrcEhSMUF5UlU5T2FuUTRaVnBZTkZkaGQybDFORWN6UlRnMWJEZ3dkV3BSZDNGdVZIbGFSV0ZWUzFBNFEyUXZXREZLVkc5M1NWVlJkbTFpVmtOUk1FMW9RMXBsYUZGM2RVSlRUemN6TDNCa1YyVkhVVmMxT1dadGRpdFVlRkJUWW5kT1RsUXhSVTRpTENKdFlXTWlPaUkxTlRNNE4yRTRPVEptT1dSbFpUWmpOV0UwWkRJME16ZzRNR1kwT1dNeE1HRXpOakprTWpJeU5XUXpOV1ZqTldRMU5EQTJZVEkyTURKbFpUUTFORGt6SWl3aWRHRm5Jam9pSW4wPQ==]]></property></property><property name="$_SERVER" fullname="$_SERVER" type="array" children="1" numchildren="95" page="0" pagesize="100"><property name="PHP_EXTRA_CONFIGURE_ARGS" fullname="$_SERVER[&quot;PHP_EXTRA_CONFIGURE_ARGS&quot;]" type="string" size="77" encoding="base64"><![CDATA[LS1lbmFibGUtZnBtIC0td2l0aC1mcG0tdXNlcj13d3ctZGF0YSAtLXdpdGgtZnBtLWdyb3VwPXd3dy1kYXRhIC0tZGlzYWJsZS1jZ2k=]]></property><property name="HOSTNAME" fullname="$_SERVER[&quot;HOSTNAME&quot;]" type="string" size="12" encoding="base64"><![CDATA[MGQ5OGIzODFjMTNm]]></property><property name="PHP_INI_DIR" fullname="$_SERVER[&quot;PHP_INI_DIR&quot;]" type="string" size="18" encoding="base64"><![CDATA[L3Vzci9sb2NhbC9ldGMvcGhw]]></property><property name="HOME" fullname="$_SERVER[&quot;HOME&quot;]" type="string" size="8" encoding="base64"><![CDATA[L3Zhci93d3c=]]></property><property name="PHP_LDFLAGS" fullname="$_SERVER[&quot;PHP_LDFLAGS&quot;]" type="string" size="12" encoding="base64"><![CDATA[LVdsLC1PMSAtcGll]]></property><property name="PHP_CFLAGS" fullname="$_SERVER[&quot;PHP_CFLAGS&quot;]" type="string" size="83" encoding="base64"><![CDATA[LWZzdGFjay1wcm90ZWN0b3Itc3Ryb25nIC1mcGljIC1mcGllIC1PMiAtRF9MQVJHRUZJTEVfU09VUkNFIC1EX0ZJTEVfT0ZGU0VUX0JJVFM9NjQ=]]></property><property name="PHP_VERSION" fullname="$_SERVER[&quot;PHP_VERSION&quot;]" type="string" size="5" encoding="base64"><![CDATA[OC4wLjI=]]></property><property name="GPG_KEYS" fullname="$_SERVER[&quot;GPG_KEYS&quot;]" type="string" size="81" encoding="base64"><![CDATA[MTcyOUY4MzkzOERBNDRFMjdCQTBGNEQzREJEQjM5NzQ3MEQxMjE3MiBCRkRERDI4NjQyODI0RjgxMThFRjc3OTA5QjY3QTVDMTIyMjkxMThG]]></property><property name="PHP_CPPFLAGS" fullname="$_SERVER[&quot;PHP_CPPFLAGS&quot;]" type="string" size="83" encoding="base64"><![CDATA[LWZzdGFjay1wcm90ZWN0b3Itc3Ryb25nIC1mcGljIC1mcGllIC1PMiAtRF9MQVJHRUZJTEVfU09VUkNFIC1EX0ZJTEVfT0ZGU0VUX0JJVFM9NjQ=]]></property><property name="PHP_ASC_URL" fullname="$_SERVER[&quot;PHP_ASC_URL&quot;]" type="string" size="58" encoding="base64"><![CDATA[aHR0cHM6Ly93d3cucGhwLm5ldC9kaXN0cmlidXRpb25zL3BocC04LjAuMi50YXIueHouYXNjP2E9MQ==]]></property><property name="PHP_URL" fullname="$_SERVER[&quot;PHP_URL&quot;]" type="string" size="54" encoding="base64"><![CDATA[aHR0cHM6Ly93d3cucGhwLm5ldC9kaXN0cmlidXRpb25zL3BocC04LjAuMi50YXIueHo/YT0x]]></property><property name="PATH" fullname="$_SERVER[&quot;PATH&quot;]" type="string" size="60" encoding="base64"><![CDATA[L3Vzci9sb2NhbC9zYmluOi91c3IvbG9jYWwvYmluOi91c3Ivc2JpbjovdXNyL2Jpbjovc2JpbjovYmlu]]></property><property type="string" size="76"><name encoding="base64"><![CDATA[UEhQSVpFX0RFUFM=]]></name><fullname encoding="base64"><![CDATA[JF9TRVJWRVJbIlBIUElaRV9ERVBTIl0=]]></fullname><value encoding="base64"><![CDATA[YXV0b2NvbmYgCQlkcGtnLWRldiAJCWZpbGUgCQlnKysgCQlnY2MgCQlsaWJjLWRldiAJCW1ha2UgCQlwa2ctY29uZmlnIAkJcmUyYw==]]></value></property><property name="PWD" fullname="$_SERVER[&quot;PWD&quot;]" type="string" size="8" encoding="base64"><![CDATA[L3Zhci93d3c=]]></property><property name="PHP_SHA256" fullname="$_SERVER[&quot;PHP_SHA256&quot;]" type="string" size="64" encoding="base64"><![CDATA[ODRkZDZlMzZmNDhjM2E3MWZmNWRjZWJhMzc1YzFmNmIzNGI3MWQ0ZmE5ZTA2YjcyMDc4MDEyNzE3NjQ2OGNjYw==]]></property><property name="USER" fullname="$_SERVER[&quot;USER&quot;]" type="string" size="8" encoding="base64"><![CDATA[d3d3LWRhdGE=]]></property><property name="HTTP_ACCEPT_ENCODING" fullname="$_SERVER[&quot;HTTP_ACCEPT_ENCODING&quot;]" type="string" size="13" encoding="base64"><![CDATA[Z3ppcCwgZGVmbGF0ZQ==]]></property><property name="HTTP_ACCEPT_LANGUAGE" fullname="$_SERVER[&quot;HTTP_ACCEPT_LANGUAGE&quot;]" type="string" size="2" encoding="base64"><![CDATA[cnU=]]></property><property name="HTTP_REFERER" fullname="$_SERVER[&quot;HTTP_REFERER&quot;]" type="string" size="20" encoding="base64"><![CDATA[aHR0cDovL2xvY2FsaG9zdDo4MS8=]]></property><property name="HTTP_USER_AGENT" fullname="$_SERVER[&quot;HTTP_USER_AGENT&quot;]" type="string" size="117" encoding="base64"><![CDATA[TW96aWxsYS81LjAgKE1hY2ludG9zaDsgSW50ZWwgTWFjIE9TIFggMTBfMTVfNykgQXBwbGVXZWJLaXQvNjA1LjEuMTUgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzE1LjMgU2FmYXJpLzYwNS4xLjE1]]></property><property name="HTTP_ACCEPT" fullname="$_SERVER[&quot;HTTP_ACCEPT&quot;]" type="string" size="63" encoding="base64"><![CDATA[dGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksKi8qO3E9MC44]]></property><property name="HTTP_UPGRADE_INSECURE_REQUESTS" fullname="$_SERVER[&quot;HTTP_UPGRADE_INSECURE_REQUESTS&quot;]" type="string" size="1" encoding="base64"><![CDATA[MQ==]]></property><property name="HTTP_CONNECTION" fullname="$_SERVER[&quot;HTTP_CONNECTION&quot;]" type="string" size="10" encoding="base64"><![CDATA[a2VlcC1hbGl2ZQ==]]></property><property name="HTTP_COOKIE" fullname="$_SERVER[&quot;HTTP_COOKIE&quot;]" type="string" size="713" encoding="base64"><![CDATA[WFNSRi1UT0tFTj1leUpwZGlJNkluaHFhVTR6Y0VwdWVIcGlXR2s0VVVNemJWZHNlRUU5UFNJc0luWmhiSFZsSWpvaU5XSkpOSEF4Wm5oNFZqQnpTeXMzVkRaeFEzRTRSVTVXWlRGc1VFOHhjMWxzWkhWYVEyRnZPV2c0T1hoa1NGWjJWaTkyV1V4UlFtZHlXRTVCTkRCRVJrNXRZbEpZWVhGUVIweGhPSGhYVkd4UVpraHNZV3g1THpGb1dtVkZObWRSTnpWbWRGSkplVGhLVDFwdWFVNXVMM2hEVGxCVk5FbFpWbEp0TVRkblkxb2lMQ0p0WVdNaU9pSTRaalEwTnpRek5EQXhPRGt5WWpVeU9HUmpORFF6T0dJMlpHVXlNR1ExWlRrME5UY3hNV1ppTTJWaU1qVTBaRGxoTWpjMk5UZzVOMlJrTTJRek1EaGpJaXdpZEdGbklqb2lJbjAlM0Q7IGxhcmF2ZWxfc2Vzc2lvbj1leUpwZGlJNklqUTNlRVZHV1hSdVlrUjRURGxUV0c5Tk0ySkRkWGM5UFNJc0luWmhiSFZsSWpvaVJVVmFlbTVzWkhKMVYxRXZjREJLU2s4d1JsbG1TVGxxZGtwSFIxQXlSVTlPYW5RNFpWcFlORmRoZDJsMU5FY3pSVGcxYkRnd2RXcFJkM0Z1VkhsYVJXRlZTMUE0UTJRdldERktWRzkzU1ZWUmRtMWlWa05STUUxb1ExcGxhRkYzZFVKVFR6Y3pMM0JrVjJWSFVWYzFPV1p0ZGl0VWVGQlRZbmRPVGxReFJVNGlMQ0p0WVdNaU9pSTFOVE00TjJFNE9USm1PV1JsWlRaak5XRTBaREkwTXpnNE1HWTBPV014TUdFek5qSmtNakl5TldRek5XVmpOV1ExTkRBMllUSTJNREpsWlRRMU5Ea3pJaXdpZEdGbklqb2lJbjAlM0Q=]]></property><property name="HTTP_HOST" fullname="$_SERVER[&quot;HTTP_HOST&quot;]" type="string" size="12" encoding="base64"><![CDATA[bG9jYWxob3N0Ojgx]]></property><property name="PATH_INFO" fullname="$_SERVER[&quot;PATH_INFO&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="SCRIPT_FILENAME" fullname="$_SERVER[&quot;SCRIPT_FILENAME&quot;]" type="string" size="25" encoding="base64"><![CDATA[L3Zhci93d3cvcHVibGljL2luZGV4LnBocA==]]></property><property name="REDIRECT_STATUS" fullname="$_SERVER[&quot;REDIRECT_STATUS&quot;]" type="string" size="3" encoding="base64"><![CDATA[MjAw]]></property><property name="SERVER_NAME" fullname="$_SERVER[&quot;SERVER_NAME&quot;]" type="string" size="9" encoding="base64"><![CDATA[bG9jYWxob3N0]]></property><property name="SERVER_PORT" fullname="$_SERVER[&quot;SERVER_PORT&quot;]" type="string" size="2" encoding="base64"><![CDATA[ODA=]]></property><property name="SERVER_ADDR" fullname="$_SERVER[&quot;SERVER_ADDR&quot;]" type="string" size="10" encoding="base64"><![CDATA[MTcyLjIwLjAuNA==]]></property><property name="REMOTE_PORT" fullname="$_SERVER[&quot;REMOTE_PORT&quot;]" type="string" size="5" encoding="base64"><![CDATA[NjA4MzI=]]></property><property name="REMOTE_ADDR" fullname="$_SERVER[&quot;REMOTE_ADDR&quot;]" type="string" size="10" encoding="base64"><![CDATA[MTcyLjIwLjAuMQ==]]></property><property name="SERVER_SOFTWARE" fullname="$_SERVER[&quot;SERVER_SOFTWARE&quot;]" type="string" size="12" encoding="base64"><![CDATA[bmdpbngvMS4yMS42]]></property><property name="GATEWAY_INTERFACE" fullname="$_SERVER[&quot;GATEWAY_INTERFACE&quot;]" type="string" size="7" encoding="base64"><![CDATA[Q0dJLzEuMQ==]]></property><property name="REQUEST_SCHEME" fullname="$_SERVER[&quot;REQUEST_SCHEME&quot;]" type="string" size="4" encoding="base64"><![CDATA[aHR0cA==]]></property><property name="SERVER_PROTOCOL" fullname="$_SERVER[&quot;SERVER_PROTOCOL&quot;]" type="string" size="8" encoding="base64"><![CDATA[SFRUUC8xLjE=]]></property><property name="DOCUMENT_ROOT" fullname="$_SERVER[&quot;DOCUMENT_ROOT&quot;]" type="string" size="15" encoding="base64"><![CDATA[L3Zhci93d3cvcHVibGlj]]></property><property name="DOCUMENT_URI" fullname="$_SERVER[&quot;DOCUMENT_URI&quot;]" type="string" size="10" encoding="base64"><![CDATA[L2luZGV4LnBocA==]]></property><property name="REQUEST_URI" fullname="$_SERVER[&quot;REQUEST_URI&quot;]" type="string" size="5" encoding="base64"><![CDATA[L2xvdHM=]]></property><property name="SCRIPT_NAME" fullname="$_SERVER[&quot;SCRIPT_NAME&quot;]" type="string" size="10" encoding="base64"><![CDATA[L2luZGV4LnBocA==]]></property><property name="CONTENT_LENGTH" fullname="$_SERVER[&quot;CONTENT_LENGTH&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="CONTENT_TYPE" fullname="$_SERVER[&quot;CONTENT_TYPE&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="REQUEST_METHOD" fullname="$_SERVER[&quot;REQUEST_METHOD&quot;]" type="string" size="3" encoding="base64"><![CDATA[R0VU]]></property><property name="QUERY_STRING" fullname="$_SERVER[&quot;QUERY_STRING&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="FCGI_ROLE" fullname="$_SERVER[&quot;FCGI_ROLE&quot;]" type="string" size="9" encoding="base64"><![CDATA[UkVTUE9OREVS]]></property><property name="PHP_SELF" fullname="$_SERVER[&quot;PHP_SELF&quot;]" type="string" size="10" encoding="base64"><![CDATA[L2luZGV4LnBocA==]]></property><property name="REQUEST_TIME_FLOAT" fullname="$_SERVER[&quot;REQUEST_TIME_FLOAT&quot;]" type="float"><![CDATA[1648105011.079]]></property><property name="REQUEST_TIME" fullname="$_SERVER[&quot;REQUEST_TIME&quot;]" type="int"><![CDATA[1648105011]]></property><property name="argv" fullname="$_SERVER[&quot;argv&quot;]" type="array" children="0" numchildren="0"></property><property name="argc" fullname="$_SERVER[&quot;argc&quot;]" type="int"><![CDATA[0]]></property><property name="APP_NAME" fullname="$_SERVER[&quot;APP_NAME&quot;]" type="string" size="7" encoding="base64"><![CDATA[TGFyYXZlbA==]]></property><property name="APP_ENV" fullname="$_SERVER[&quot;APP_ENV&quot;]" type="string" size="5" encoding="base64"><![CDATA[bG9jYWw=]]></property><property name="APP_KEY" fullname="$_SERVER[&quot;APP_KEY&quot;]" type="string" size="51" encoding="base64"><![CDATA[YmFzZTY0OlY3ekpCMzBRYmJNTDRRUnR4NU1TZmIxbVllMG8ydTRsYnBVbEdxaHpHY1E9]]></property><property name="APP_DEBUG" fullname="$_SERVER[&quot;APP_DEBUG&quot;]" type="string" size="4" encoding="base64"><![CDATA[dHJ1ZQ==]]></property><property name="APP_URL" fullname="$_SERVER[&quot;APP_URL&quot;]" type="string" size="16" encoding="base64"><![CDATA[aHR0cDovL2xvY2FsaG9zdA==]]></property><property name="TG_TOKEN" fullname="$_SERVER[&quot;TG_TOKEN&quot;]" type="string" size="46" encoding="base64"><![CDATA[MjAyMDE4MjA2NDpBQUY4UG9GUVF2TXFtX0Q2ZDdzZGpKZk1YUWY4ZmtxeVJUbw==]]></property><property name="LOG_CHANNEL" fullname="$_SERVER[&quot;LOG_CHANNEL&quot;]" type="string" size="5" encoding="base64"><![CDATA[c3RhY2s=]]></property><property name="LOG_DEPRECATIONS_CHANNEL" fullname="$_SERVER[&quot;LOG_DEPRECATIONS_CHANNEL&quot;]" type="string" size="4" encoding="base64"><![CDATA[bnVsbA==]]></property><property name="LOG_LEVEL" fullname="$_SERVER[&quot;LOG_LEVEL&quot;]" type="string" size="5" encoding="base64"><![CDATA[ZGVidWc=]]></property><property name="DB_CONNECTION" fullname="$_SERVER[&quot;DB_CONNECTION&quot;]" type="string" size="5" encoding="base64"><![CDATA[cGdzcWw=]]></property><property name="DB_HOST" fullname="$_SERVER[&quot;DB_HOST&quot;]" type="string" size="8" encoding="base64"><![CDATA[ZGItcGdzcWw=]]></property><property name="DB_PORT" fullname="$_SERVER[&quot;DB_PORT&quot;]" type="string" size="4" encoding="base64"><![CDATA[NTQzMg==]]></property><property name="DB_DATABASE" fullname="$_SERVER[&quot;DB_DATABASE&quot;]" type="string" size="6" encoding="base64"><![CDATA[Y3J5cHRv]]></property><property name="DB_USERNAME" fullname="$_SERVER[&quot;DB_USERNAME&quot;]" type="string" size="8" encoding="base64"><![CDATA[cG9zdGdyZXM=]]></property><property name="DB_PASSWORD" fullname="$_SERVER[&quot;DB_PASSWORD&quot;]" type="string" size="10" encoding="base64"><![CDATA[UXExMjM0NTY3OA==]]></property><property name="BROADCAST_DRIVER" fullname="$_SERVER[&quot;BROADCAST_DRIVER&quot;]" type="string" size="3" encoding="base64"><![CDATA[bG9n]]></property><property name="CACHE_DRIVER" fullname="$_SERVER[&quot;CACHE_DRIVER&quot;]" type="string" size="4" encoding="base64"><![CDATA[ZmlsZQ==]]></property><property name="FILESYSTEM_DISK" fullname="$_SERVER[&quot;FILESYSTEM_DISK&quot;]" type="string" size="5" encoding="base64"><![CDATA[bG9jYWw=]]></property><property name="QUEUE_CONNECTION" fullname="$_SERVER[&quot;QUEUE_CONNECTION&quot;]" type="string" size="4" encoding="base64"><![CDATA[c3luYw==]]></property><property name="SESSION_DRIVER" fullname="$_SERVER[&quot;SESSION_DRIVER&quot;]" type="string" size="4" encoding="base64"><![CDATA[ZmlsZQ==]]></property><property name="SESSION_LIFETIME" fullname="$_SERVER[&quot;SESSION_LIFETIME&quot;]" type="string" size="3" encoding="base64"><![CDATA[MTIw]]></property><property name="MEMCACHED_HOST" fullname="$_SERVER[&quot;MEMCACHED_HOST&quot;]" type="string" size="9" encoding="base64"><![CDATA[MTI3LjAuMC4x]]></property><property name="REDIS_HOST" fullname="$_SERVER[&quot;REDIS_HOST&quot;]" type="string" size="9" encoding="base64"><![CDATA[MTI3LjAuMC4x]]></property><property name="REDIS_PASSWORD" fullname="$_SERVER[&quot;REDIS_PASSWORD&quot;]" type="string" size="4" encoding="base64"><![CDATA[bnVsbA==]]></property><property name="REDIS_PORT" fullname="$_SERVER[&quot;REDIS_PORT&quot;]" type="string" size="4" encoding="base64"><![CDATA[NjM3OQ==]]></property><property name="MAIL_MAILER" fullname="$_SERVER[&quot;MAIL_MAILER&quot;]" type="string" size="4" encoding="base64"><![CDATA[c210cA==]]></property><property name="MAIL_HOST" fullname="$_SERVER[&quot;MAIL_HOST&quot;]" type="string" size="7" encoding="base64"><![CDATA[bWFpbGhvZw==]]></property><property name="MAIL_PORT" fullname="$_SERVER[&quot;MAIL_PORT&quot;]" type="string" size="4" encoding="base64"><![CDATA[MTAyNQ==]]></property><property name="MAIL_USERNAME" fullname="$_SERVER[&quot;MAIL_USERNAME&quot;]" type="string" size="4" encoding="base64"><![CDATA[bnVsbA==]]></property><property name="MAIL_PASSWORD" fullname="$_SERVER[&quot;MAIL_PASSWORD&quot;]" type="string" size="4" encoding="base64"><![CDATA[bnVsbA==]]></property><property name="MAIL_ENCRYPTION" fullname="$_SERVER[&quot;MAIL_ENCRYPTION&quot;]" type="string" size="4" encoding="base64"><![CDATA[bnVsbA==]]></property><property name="MAIL_FROM_ADDRESS" fullname="$_SERVER[&quot;MAIL_FROM_ADDRESS&quot;]" type="string" size="17" encoding="base64"><![CDATA[aGVsbG9AZXhhbXBsZS5jb20=]]></property><property name="MAIL_FROM_NAME" fullname="$_SERVER[&quot;MAIL_FROM_NAME&quot;]" type="string" size="7" encoding="base64"><![CDATA[TGFyYXZlbA==]]></property><property name="AWS_ACCESS_KEY_ID" fullname="$_SERVER[&quot;AWS_ACCESS_KEY_ID&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="AWS_SECRET_ACCESS_KEY" fullname="$_SERVER[&quot;AWS_SECRET_ACCESS_KEY&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="AWS_DEFAULT_REGION" fullname="$_SERVER[&quot;AWS_DEFAULT_REGION&quot;]" type="string" size="9" encoding="base64"><![CDATA[dXMtZWFzdC0x]]></property><property name="AWS_BUCKET" fullname="$_SERVER[&quot;AWS_BUCKET&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="AWS_USE_PATH_STYLE_ENDPOINT" fullname="$_SERVER[&quot;AWS_USE_PATH_STYLE_ENDPOINT&quot;]" type="string" size="5" encoding="base64"><![CDATA[ZmFsc2U=]]></property><property name="PUSHER_APP_ID" fullname="$_SERVER[&quot;PUSHER_APP_ID&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="PUSHER_APP_KEY" fullname="$_SERVER[&quot;PUSHER_APP_KEY&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="PUSHER_APP_SECRET" fullname="$_SERVER[&quot;PUSHER_APP_SECRET&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="PUSHER_APP_CLUSTER" fullname="$_SERVER[&quot;PUSHER_APP_CLUSTER&quot;]" type="string" size="3" encoding="base64"><![CDATA[bXQx]]></property><property name="MIX_PUSHER_APP_KEY" fullname="$_SERVER[&quot;MIX_PUSHER_APP_KEY&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="MIX_PUSHER_APP_CLUSTER" fullname="$_SERVER[&quot;MIX_PUSHER_APP_CLUSTER&quot;]" type="string" size="3" encoding="base64"><![CDATA[bXQx]]></property></property><property name="$GLOBALS" fullname="$GLOBALS" type="array" children="1" numchildren="14" page="0" pagesize="100"><property name="_GET" fullname="$GLOBALS[&quot;_GET&quot;]" type="array" children="0" numchildren="0"></property><property name="_POST" fullname="$GLOBALS[&quot;_POST&quot;]" type="array" children="0" numchildren="0"></property><property name="_COOKIE" fullname="$GLOBALS[&quot;_COOKIE&quot;]" type="array" children="1" numchildren="2"></property><property name="_FILES" fullname="$GLOBALS[&quot;_FILES&quot;]" type="array" children="0" numchildren="0"></property><property name="_ENV" fullname="$GLOBALS[&quot;_ENV&quot;]" type="array" children="1" numchildren="90"></property><property name="_REQUEST" fullname="$GLOBALS[&quot;_REQUEST&quot;]" type="array" children="1" numchildren="2"></property><property name="_SERVER" fullname="$GLOBALS[&quot;_SERVER&quot;]" type="array" children="1" numchildren="95"></property><property name="maintenance" fullname="$GLOBALS[&quot;maintenance&quot;]" type="string" size="52" encoding="base64"><![CDATA[L3Zhci93d3cvcHVibGljLy4uL3N0b3JhZ2UvZnJhbWV3b3JrL21haW50ZW5hbmNlLnBocA==]]></property><property name="app" fullname="$GLOBALS[&quot;app&quot;]" type="object" classname="Illuminate\Foundation\Application" children="1" numchildren="38"></property><property name="kernel" fullname="$GLOBALS[&quot;kernel&quot;]" type="object" classname="App\Http\Kernel" children="1" numchildren="7"></property><property name="request" fullname="$GLOBALS[&quot;request&quot;]" type="object" classname="Illuminate\Http\Request" children="1" numchildren="36"></property><property name="GLOBALS" fullname="$GLOBALS[&quot;GLOBALS&quot;]" type="array" children="1" recursive="1"></property><property name="__composer_autoload_files" fullname="$GLOBALS[&quot;__composer_autoload_files&quot;]" type="array" children="1" numchildren="27"></property></property></response>

[10] [Step Debug] <- context_get -i 22 -d 0 -c 2
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="context_get" transaction_id="22" context="2"><property name="LARAVEL_START" fullname="LARAVEL_START" type="float" facet="constant"><![CDATA[1648105018.3962]]></property><property name="U_IDNA_PROHIBITED_ERROR" fullname="U_IDNA_PROHIBITED_ERROR" type="int" facet="constant"><![CDATA[66560]]></property><property name="U_IDNA_ERROR_START" fullname="U_IDNA_ERROR_START" type="int" facet="constant"><![CDATA[66560]]></property><property name="U_IDNA_UNASSIGNED_ERROR" fullname="U_IDNA_UNASSIGNED_ERROR" type="int" facet="constant"><![CDATA[66561]]></property><property name="U_IDNA_CHECK_BIDI_ERROR" fullname="U_IDNA_CHECK_BIDI_ERROR" type="int" facet="constant"><![CDATA[66562]]></property><property name="U_IDNA_STD3_ASCII_RULES_ERROR" fullname="U_IDNA_STD3_ASCII_RULES_ERROR" type="int" facet="constant"><![CDATA[66563]]></property><property name="U_IDNA_ACE_PREFIX_ERROR" fullname="U_IDNA_ACE_PREFIX_ERROR" type="int" facet="constant"><![CDATA[66564]]></property><property name="U_IDNA_VERIFICATION_ERROR" fullname="U_IDNA_VERIFICATION_ERROR" type="int" facet="constant"><![CDATA[66565]]></property><property name="U_IDNA_LABEL_TOO_LONG_ERROR" fullname="U_IDNA_LABEL_TOO_LONG_ERROR" type="int" facet="constant"><![CDATA[66566]]></property><property name="U_IDNA_ZERO_LENGTH_LABEL_ERROR" fullname="U_IDNA_ZERO_LENGTH_LABEL_ERROR" type="int" facet="constant"><![CDATA[66567]]></property><property name="U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR" fullname="U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR" type="int" facet="constant"><![CDATA[66568]]></property><property name="U_IDNA_ERROR_LIMIT" fullname="U_IDNA_ERROR_LIMIT" type="int" facet="constant"><![CDATA[66569]]></property><property name="U_STRINGPREP_PROHIBITED_ERROR" fullname="U_STRINGPREP_PROHIBITED_ERROR" type="int" facet="constant"><![CDATA[66560]]></property><property name="U_STRINGPREP_UNASSIGNED_ERROR" fullname="U_STRINGPREP_UNASSIGNED_ERROR" type="int" facet="constant"><![CDATA[66561]]></property><property name="U_STRINGPREP_CHECK_BIDI_ERROR" fullname="U_STRINGPREP_CHECK_BIDI_ERROR" type="int" facet="constant"><![CDATA[66562]]></property><property name="IDNA_DEFAULT" fullname="IDNA_DEFAULT" type="int" facet="constant"><![CDATA[0]]></property><property name="IDNA_ALLOW_UNASSIGNED" fullname="IDNA_ALLOW_UNASSIGNED" type="int" facet="constant"><![CDATA[1]]></property><property name="IDNA_USE_STD3_RULES" fullname="IDNA_USE_STD3_RULES" type="int" facet="constant"><![CDATA[2]]></property><property name="IDNA_CHECK_BIDI" fullname="IDNA_CHECK_BIDI" type="int" facet="constant"><![CDATA[4]]></property><property name="IDNA_CHECK_CONTEXTJ" fullname="IDNA_CHECK_CONTEXTJ" type="int" facet="constant"><![CDATA[8]]></property><property name="IDNA_NONTRANSITIONAL_TO_ASCII" fullname="IDNA_NONTRANSITIONAL_TO_ASCII" type="int" facet="constant"><![CDATA[16]]></property><property name="IDNA_NONTRANSITIONAL_TO_UNICODE" fullname="IDNA_NONTRANSITIONAL_TO_UNICODE" type="int" facet="constant"><![CDATA[32]]></property><property name="INTL_IDNA_VARIANT_UTS46" fullname="INTL_IDNA_VARIANT_UTS46" type="int" facet="constant"><![CDATA[1]]></property><property name="IDNA_ERROR_EMPTY_LABEL" fullname="IDNA_ERROR_EMPTY_LABEL" type="int" facet="constant"><![CDATA[1]]></property><property name="IDNA_ERROR_LABEL_TOO_LONG" fullname="IDNA_ERROR_LABEL_TOO_LONG" type="int" facet="constant"><![CDATA[2]]></property><property name="IDNA_ERROR_DOMAIN_NAME_TOO_LONG" fullname="IDNA_ERROR_DOMAIN_NAME_TOO_LONG" type="int" facet="constant"><![CDATA[4]]></property><property name="IDNA_ERROR_LEADING_HYPHEN" fullname="IDNA_ERROR_LEADING_HYPHEN" type="int" facet="constant"><![CDATA[8]]></property><property name="IDNA_ERROR_TRAILING_HYPHEN" fullname="IDNA_ERROR_TRAILING_HYPHEN" type="int" facet="constant"><![CDATA[16]]></property><property name="IDNA_ERROR_HYPHEN_3_4" fullname="IDNA_ERROR_HYPHEN_3_4" type="int" facet="constant"><![CDATA[32]]></property><property name="IDNA_ERROR_LEADING_COMBINING_MARK" fullname="IDNA_ERROR_LEADING_COMBINING_MARK" type="int" facet="constant"><![CDATA[64]]></property><property name="IDNA_ERROR_DISALLOWED" fullname="IDNA_ERROR_DISALLOWED" type="int" facet="constant"><![CDATA[128]]></property><property name="IDNA_ERROR_PUNYCODE" fullname="IDNA_ERROR_PUNYCODE" type="int" facet="constant"><![CDATA[256]]></property><property name="IDNA_ERROR_LABEL_HAS_DOT" fullname="IDNA_ERROR_LABEL_HAS_DOT" type="int" facet="constant"><![CDATA[512]]></property><property name="IDNA_ERROR_INVALID_ACE_LABEL" fullname="IDNA_ERROR_INVALID_ACE_LABEL" type="int" facet="constant"><![CDATA[1024]]></property><property name="IDNA_ERROR_BIDI" fullname="IDNA_ERROR_BIDI" type="int" facet="constant"><![CDATA[2048]]></property><property name="IDNA_ERROR_CONTEXTJ" fullname="IDNA_ERROR_CONTEXTJ" type="int" facet="constant"><![CDATA[4096]]></property><property name="GRAPHEME_EXTR_COUNT" fullname="GRAPHEME_EXTR_COUNT" type="int" facet="constant"><![CDATA[0]]></property><property name="GRAPHEME_EXTR_MAXBYTES" fullname="GRAPHEME_EXTR_MAXBYTES" type="int" facet="constant"><![CDATA[1]]></property><property name="GRAPHEME_EXTR_MAXCHARS" fullname="GRAPHEME_EXTR_MAXCHARS" type="int" facet="constant"><![CDATA[2]]></property><property name="HTMLPURIFIER_PREFIX" fullname="HTMLPURIFIER_PREFIX" type="string" size="43" facet="constant" encoding="base64"><![CDATA[L3Zhci93d3cvdmVuZG9yL2V6eWFuZy9odG1scHVyaWZpZXIvbGlicmFyeQ==]]></property></response>

[10] [Step Debug] <- breakpoint_set -i 23 -t line -f file:///var/www/app/Http/Controllers/Api/v1/InitController.php -n 27
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="breakpoint_set" transaction_id="23" id="100002" resolved="unresolved"></response>

[10] [Step Debug] <- run -i 24
[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U3RhdHVzOiA1MDAgSW50ZXJuYWwgU2VydmVyIEVycm9yDQo=]]></stream>

[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[WC1Qb3dlcmVkLUJ5OiBQSFAvOC4wLjI=]]></stream>

[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIHByaXZhdGU=]]></stream>

[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[ZGF0ZTogVGh1LCAyNCBNYXIgMjAyMiAwNjo1NzozOSBHTVQ=]]></stream>

[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTg=]]></stream>

[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U2V0LUNvb2tpZTogWFNSRi1UT0tFTj1leUpwZGlJNklsZGtkV0pVVTBzMmVIbFBLemRrYUhZMVkySkZUV2M5UFNJc0luWmhiSFZsSWpvaVlrVjZTRkphT0ZSVFYyWkRWRnBvYjNrMmNEWlhiMjExWTNGaVQyNTNhRGt6ZEV4cmJFRmFURzg1TVU5bFVFZ3lZbEZFUlhjM01rUkVNM2hrVlRONVprVkhjR1pZYTJsREt6aDNRalZoZFVkVlVqVmlWU3RLTjJ4elVrZHNVVkEzUWxOWUswUXdOMDVNTUcwdlZuTkdNSHBFVkV0bVlsZHdaeXRYUXpoNWRGRWlMQ0p0WVdNaU9pSXhOV00wWmpWa05UbGpaalJrWVRGbU9EVXhabU01T1RGaE1XWXdNMlV5T0RZME1qaGtZamMyT1RWa1ltTTNZelUzTXpKaE5UZGpOalE1TmpZNE1tUXdJaXdpZEdGbklqb2lJbjAlM0Q7IGV4cGlyZXM9VGh1LCAyNC1NYXItMjAyMiAwODo1NzozOSBHTVQ7IE1heC1BZ2U9NzIwMDsgcGF0aD0vOyBzYW1lc2l0ZT1sYXg=]]></stream>

[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U2V0LUNvb2tpZTogbGFyYXZlbF9zZXNzaW9uPWV5SnBkaUk2SWtKa2FVUnBkR2R4UzNGQ2JqZFlOSGxHZDJsbFRIYzlQU0lzSW5aaGJIVmxJam9pWmtselExZFJRMEpTTlUxcFRtNHdaVnBWVVhkaWVubENNV2gxVnpWaVJEZE9TWGhDVERWR1NVaG1kRGxOWjBocU5taDNlVkZTZW1ock1rRlZNaXN5WlM5dFJWWXhWRkZxZEVwbVVXUjZTMXBNYmtSR2VFSjFkVFEzYkZWWk5WTm9jV3R4Vm1ZM09HdG1ha1J1TDIxNVZVdHZSalJhVm5saWVYTjFNVEJzV1ZNaUxDSnRZV01pT2lJMll6STVNamRsTjJSa1l6a3lNRGRqWVRjM01qSTFNV1UzTkROaU1tWTVOalV6TkdNNVlXTm1PREZrTWpWbE9HUTJNbUZpTlRBellqWXlOR05pWTJabUlpd2lkR0ZuSWpvaUluMCUzRDsgZXhwaXJlcz1UaHUsIDI0LU1hci0yMDIyIDA4OjU3OjM5IEdNVDsgTWF4LUFnZT03MjAwOyBwYXRoPS87IGh0dHBvbmx5OyBzYW1lc2l0ZT1sYXg=]]></stream>

[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[10] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[]]></stream>

[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="run" transaction_id="24" status="stopping" reason="ok"></response>

[10] [Step Debug] <- detach -i 25
[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="detach" transaction_id="25" status="stopping" reason="ok"></response>

[10] Log closed at 2022-03-24 06:57:41.110640

[9] Log opened at 2022-03-24 06:57:53.417063
[9] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[9] [Step Debug] INFO: Connected to debugging client: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port). :-)
[9] [Step Debug] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/public/index.php" language="PHP" xdebug:language_version="8.0.2" protocol_version="1.0" appid="9"><engine version="3.1.3"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2022 by Derick Rethans]]></copyright></init>

[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" status="stopping" reason="ok"></response>

[9] [Step Debug] WARN: 2022-03-24 07:07:59.639818: There was a problem sending 179 bytes on socket 6: Broken pipe.
[9] Log closed at 2022-03-24 07:07:59.641879

[8] Log opened at 2022-03-24 07:29:05.269220
[8] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[8] [Step Debug] WARN: Creating socket for 'host.docker.internal:9003', poll success, but error: Operation now in progress (29).
[8] [Step Debug] ERR: Could not connect to debugging client. Tried: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port) :-(
[8] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[8] [Step Debug] WARN: Creating socket for 'host.docker.internal:9003', poll success, but error: Operation now in progress (29).
[8] [Step Debug] ERR: Could not connect to debugging client. Tried: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port) :-(
[8] Log closed at 2022-03-24 07:29:07.970448

[9] Log opened at 2022-03-24 07:29:14.313582
[9] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[9] [Step Debug] INFO: Connected to debugging client: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port). :-)
[9] [Step Debug] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/public/index.php" language="PHP" xdebug:language_version="8.0.2" protocol_version="1.0" appid="9"><engine version="3.1.3"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2022 by Derick Rethans]]></copyright></init>

[9] [Step Debug] <- feature_set -i 1 -n show_hidden -v 1
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="1" feature="show_hidden" success="1"></response>

[9] [Step Debug] <- feature_set -i 2 -n max_depth -v 1
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="2" feature="max_depth" success="1"></response>

[9] [Step Debug] <- feature_set -i 3 -n max_children -v 100
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="3" feature="max_children" success="1"></response>

[9] [Step Debug] <- feature_set -i 4 -n extended_properties -v 1
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="4" feature="extended_properties" success="1"></response>

[9] [Step Debug] <- feature_set -i 5 -n notify_ok -v 1
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="5" feature="notify_ok" success="1"></response>

[9] [Step Debug] <- feature_set -i 6 -n resolved_breakpoints -v 1
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="6" feature="resolved_breakpoints" success="1"></response>

[9] [Step Debug] <- stdout -i 7 -c 1
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stdout" transaction_id="7" success="1"></response>

[9] [Step Debug] <- status -i 8
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="status" transaction_id="8" status="starting" reason="ok"></response>

[9] [Step Debug] <- step_into -i 9
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="step_into" transaction_id="9" status="break" reason="ok"><xdebug:message filename="file:///var/www/public/index.php" lineno="6"></xdebug:message></response>

[9] [Step Debug] <- eval -i 10 -- aXNzZXQoJF9TRVJWRVJbJ1BIUF9JREVfQ09ORklHJ10p
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="10"><property type="bool"><![CDATA[0]]></property></response>

[9] [Step Debug] <- eval -i 11 -- aXNzZXQoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10p
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="11"><property type="bool"><![CDATA[1]]></property></response>

[9] [Step Debug] <- eval -i 12 -- KHN0cmluZykoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10p
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="12"><property type="string" size="9" encoding="base64"><![CDATA[bG9jYWxob3N0]]></property></response>

[9] [Step Debug] <- eval -i 13 -- KHN0cmluZykoJF9TRVJWRVJbJ1NFUlZFUl9QT1JUJ10p
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="13"><property type="string" size="2" encoding="base64"><![CDATA[ODA=]]></property></response>

[9] [Step Debug] <- eval -i 14 -- KHN0cmluZykoJF9TRVJWRVJbJ1JFUVVFU1RfVVJJJ10p
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="14"><property type="string" size="1" encoding="base64"><![CDATA[Lw==]]></property></response>

[9] [Step Debug] <- breakpoint_set -i 15 -t line -f file:///var/www/app/Http/Controllers/Api/v1/InitController.php -n 27
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="breakpoint_set" transaction_id="15" id="90001" resolved="unresolved"></response>

[9] [Step Debug] <- breakpoint_set -i 16 -t call -m App\Http\Controllers\WebSiteControllers\LotController::index
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="breakpoint_set" transaction_id="16" id="90002" resolved="resolved"></response>

[9] [Step Debug] <- stack_get -i 17
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stack_get" transaction_id="17"><stack where="{main}" level="0" type="file" filename="file:///var/www/public/index.php" lineno="6"></stack></response>

[9] [Step Debug] <- run -i 18
[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[WC1Qb3dlcmVkLUJ5OiBQSFAvOC4wLjI=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTg=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIHByaXZhdGU=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[RGF0ZTogVGh1LCAyNCBNYXIgMjAyMiAwNzoyOToxNiBHTVQ=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U2V0LUNvb2tpZTogWFNSRi1UT0tFTj1leUpwZGlJNkluRkViVlZwV1dwcEswSklNSEZqVjJsaVYwZDRXbEU5UFNJc0luWmhiSFZsSWpvaVlscGxUMmhtZWxOSlp6Wk9jRkpXY21ndlJYRmhhbWg2UnpRMlZGVnpNRlV5U0VWU1RXbFlORWh3TkRaaWNYbDBiM2xYUnpocUx5dDFhRGxRY2xkTVJqQjFiMFZUYmtFMVkwaDZaMkp5ZEhCU1lXUlphMFJwUTNscVQwOTZjREYxYVhkM1IxaHdWRkpzV201SVpEVnhhRnBOV25Kbk1tVTFaSEo2WVdaVGMwY2lMQ0p0WVdNaU9pSmlaRFUwT0dJMk1HUm1PRFJsWkRrMU1qWmtPV05oTmpaaFlUa3lObUpsTmpWbU16SmxaV0V5TW1JMFltVmtPVFk1Wm1ZM05HSTJZekppTUdSaFpEZGpJaXdpZEdGbklqb2lJbjAlM0Q7IGV4cGlyZXM9VGh1LCAyNC1NYXItMjAyMiAwOToyOToxNiBHTVQ7IE1heC1BZ2U9NzIwMDsgcGF0aD0vOyBzYW1lc2l0ZT1sYXg=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U2V0LUNvb2tpZTogbGFyYXZlbF9zZXNzaW9uPWV5SnBkaUk2SWxCMmMwUklUalJGWmpoUVJ6QlJaSGxUZVRWa05uYzlQU0lzSW5aaGJIVmxJam9pVFc0eEszaFlZMEpUVVdKWlVXbGpXbk5NTWtGSFdDdE5kM3AwZWk5NVNrdzRNMkZLY0ZCTlMzcGFabFYzZHpoT04xaDNhVzB5VGxVMk1GTktkUzlCV1cwMk5XVkphV0kwTUZoT1JrRktTVWR2ZFZSa1RYVTVURUozUVd4eGVXczNWbkZFZVhKbVl6VllSVTQyTVdzd2IxbEpWemxqVEc5aVJHWkRVVkJ1VERjaUxDSnRZV01pT2lJeFptVTBNbVJsTldSbVpqRmxOalExWm1ZeFptTTVNakJoWW1Wa1l6ZzVOemhtTVRFd1lURXlNbUV4T1RFd09EVXlNMkpoT1RRNU16VXhZMlZsTkRjeUlpd2lkR0ZuSWpvaUluMCUzRDsgZXhwaXJlcz1UaHUsIDI0LU1hci0yMDIyIDA5OjI5OjE2IEdNVDsgTWF4LUFnZT03MjAwOyBwYXRoPS87IGh0dHBvbmx5OyBzYW1lc2l0ZT1sYXg=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9InJ1Ij4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEiPgogICAgPHRpdGxlPtCQ0LTQvNC40L3QuNGB0YLRgNC40YDQvtCy0LDQvdC40LUg0LvQvtGC0L7QsjwvdGl0bGU+CgogICAgPCEtLSBCb290c3RyYXAgY29yZSBDU1MgLS0+CiAgICA8bGluayBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjEuMy9kaXN0L2Nzcy9ib290c3RyYXAubWluLmNzcyIgcmVsPSJzdHlsZXNoZWV0IgogICAgICAgICAgaW50ZWdyaXR5PSJzaGEzODQtMUJtRTRrV0JxNzhpWWhGbGR2S3VoZlRBVTZhdVU4dFQ5NFdySGZ0akRickNFWFNVMW9Cb3F5bDJRdlo2aklXMyIgY3Jvc3NvcmlnaW49ImFub255bW91cyI+Cgo8L2hlYWQ+Cjxib2R5IGNsYXNzPSJiZy1saWdodCI+CjxkaXYgY2xhc3M9ImNvbnRhaW5lciBtdC00Ij4KICAgIDxuYXY+CiAgICA8cD4KICAgICAgICA8YSBocmVmPSJodHRwOi8vbG9jYWxob3N0OjgxL2xvdHMvY3JlYXRlIiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5Ij7QlNC+0LHQsNCy0LjRgtGMINC70L7RgjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwOi8vbG9jYWxob3N0OjgxL2xvdHMiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiPtCh0L/QuNGB0L7QuiDQsNC60YLQuNCy0L3Ri9GFINC70L7RgtC+0LI8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cDovL2xvY2FsaG9zdDo4MS9maWxlcy9jcmVhdGUiIGNsYXNzPSJidG4gYnRuLXN1Y2Nlc3MiPtCU0L7QsdCw0LLQuNGC0Ywg0YTQsNC50Ls8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cDovL2xvY2FsaG9zdDo4MS9maWxlcyIgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyI+0KHQv9C40YHQvtC6INCw0LrRgtC40LLQvdGL0YUg0YTQsNC50LvQvtCyPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9sb2NhbGhvc3Q6ODEvZmlsZXR5cGUiIGNsYXNzPSJidG4gYnRuLWRhbmdlciI+0J3QsNGB0YLRgNC+0LnQutC4PC9hPgogICAgPC9wPgo8L25hdj4KICAgIAoKPC9kaXY+CjxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjEuMy9kaXN0L2pzL2Jvb3RzdHJhcC5idW5kbGUubWluLmpzIgogICAgICAgIGludGVncml0eT0ic2hhMzg0LWthN1NrMEdsbjRnbXR6Mk1sUW5pa1Qxd1hnWXNPZytPTWh1UCtJbFJIOXNFTkJPMExSbjVxKzhuYlRvdjQrMXAiCiAgICAgICAgY3Jvc3NvcmlnaW49ImFub255bW91cyI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL0Bwb3BwZXJqcy9jb3JlQDIuMTAuMi9kaXN0L3VtZC9wb3BwZXIubWluLmpzIgogICAgICAgIGludGVncml0eT0ic2hhMzg0LTcrekNOai9JcUo5NXdvMTZvTXRmc0tiWjljY0VoMzFlT3oxSEd5RHVDUTZ3Z255Sk5TWWRyUGEwM3J0UjF6ZEIiCiAgICAgICAgY3Jvc3NvcmlnaW49ImFub255bW91cyI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjEuMy9kaXN0L2pzL2Jvb3RzdHJhcC5taW4uanMiCiAgICAgICAgaW50ZWdyaXR5PSJzaGEzODQtUUpIdHZHaG1yOVhPSXBJNllWdXRHKzJRT0s5VCtabk40a3pGTjFSdEszekVGRUlzeGhsbVdsNS9ZRVN2cFoxMyIKICAgICAgICBjcm9zc29yaWdpbj0iYW5vbnltb3VzIj48L3NjcmlwdD4KPC9ib2R5Pgo8L2h0bWw+Cg==]]></stream>

[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="run" transaction_id="18" status="stopping" reason="ok"></response>

[9] [Step Debug] <- detach -i 19
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="detach" transaction_id="19" status="stopping" reason="ok"></response>

[9] Log closed at 2022-03-24 07:29:16.299752

[8] Log opened at 2022-03-24 07:29:26.639211
[8] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[8] [Step Debug] INFO: Connected to debugging client: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port). :-)
[8] [Step Debug] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/public/index.php" language="PHP" xdebug:language_version="8.0.2" protocol_version="1.0" appid="8"><engine version="3.1.3"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2022 by Derick Rethans]]></copyright></init>

[8] [Step Debug] <- feature_set -i 1 -n show_hidden -v 1
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="1" feature="show_hidden" success="1"></response>

[8] [Step Debug] <- feature_set -i 2 -n max_depth -v 1
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="2" feature="max_depth" success="1"></response>

[8] [Step Debug] <- feature_set -i 3 -n max_children -v 100
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="3" feature="max_children" success="1"></response>

[8] [Step Debug] <- feature_set -i 4 -n extended_properties -v 1
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="4" feature="extended_properties" success="1"></response>

[8] [Step Debug] <- feature_set -i 5 -n notify_ok -v 1
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="5" feature="notify_ok" success="1"></response>

[8] [Step Debug] <- feature_set -i 6 -n resolved_breakpoints -v 1
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="6" feature="resolved_breakpoints" success="1"></response>

[8] [Step Debug] <- stdout -i 7 -c 1
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stdout" transaction_id="7" success="1"></response>

[8] [Step Debug] <- status -i 8
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="status" transaction_id="8" status="starting" reason="ok"></response>

[8] [Step Debug] <- step_into -i 9
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="step_into" transaction_id="9" status="break" reason="ok"><xdebug:message filename="file:///var/www/public/index.php" lineno="6"></xdebug:message></response>

[8] [Step Debug] <- eval -i 10 -- aXNzZXQoJF9TRVJWRVJbJ1BIUF9JREVfQ09ORklHJ10p
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="10"><property type="bool"><![CDATA[0]]></property></response>

[8] [Step Debug] <- eval -i 11 -- aXNzZXQoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10p
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="11"><property type="bool"><![CDATA[1]]></property></response>

[8] [Step Debug] <- eval -i 12 -- KHN0cmluZykoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10p
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="12"><property type="string" size="9" encoding="base64"><![CDATA[bG9jYWxob3N0]]></property></response>

[8] [Step Debug] <- eval -i 13 -- KHN0cmluZykoJF9TRVJWRVJbJ1NFUlZFUl9QT1JUJ10p
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="13"><property type="string" size="2" encoding="base64"><![CDATA[ODA=]]></property></response>

[8] [Step Debug] <- eval -i 14 -- KHN0cmluZykoJF9TRVJWRVJbJ1JFUVVFU1RfVVJJJ10p
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="14"><property type="string" size="1" encoding="base64"><![CDATA[Lw==]]></property></response>

[8] [Step Debug] <- breakpoint_set -i 15 -t line -f file:///var/www/app/Http/Controllers/Api/v1/InitController.php -n 27
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="breakpoint_set" transaction_id="15" id="80001" resolved="unresolved"></response>

[8] [Step Debug] <- breakpoint_set -i 16 -t call -m App\Http\Controllers\WebSiteControllers\LotController::index
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="breakpoint_set" transaction_id="16" id="80002" resolved="resolved"></response>

[8] [Step Debug] <- stack_get -i 17
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stack_get" transaction_id="17"><stack where="{main}" level="0" type="file" filename="file:///var/www/public/index.php" lineno="6"></stack></response>

[8] [Step Debug] <- run -i 18
[8] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[WC1Qb3dlcmVkLUJ5OiBQSFAvOC4wLjI=]]></stream>

[8] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[8] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTg=]]></stream>

[8] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[8] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIHByaXZhdGU=]]></stream>

[8] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[8] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[RGF0ZTogVGh1LCAyNCBNYXIgMjAyMiAwNzoyOToyOCBHTVQ=]]></stream>

[8] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[8] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U2V0LUNvb2tpZTogWFNSRi1UT0tFTj1leUpwZGlJNklsRlNPSGhWZEVOc2RtMDFaRVJ3UjNVMVFscEtTRkU5UFNJc0luWmhiSFZsSWpvaVlqTk9iR3BNZVVKMGRUWnNabkJVTlhvek0xZGxibUppUm5WMWIwTlRXVE54WTJZelFsVlNUMDF0Y1RaNVJYRm1TMHhwVFhWd2FsZHdVbXRLTTA0eVVsVlRieXR2Vmt0YWIzcFlPRUl4UW05dFZtd3JVbEZ5U25nM1FUUndXRmxKU1ZkWGJ6WnhjRGRXTjJKMGVURm9TSEprUVZCcVNYZ3ZLMmhWTm5GcVdIQWlMQ0p0WVdNaU9pSXpOVEJqWWpZNU9XSXdOR05pWTJVNFptWXdNMkUxWkRWaU1qRTNNbVJqTVdJelltUmtOR0ZsT1RNeU16Z3pNR05sTlRRNVpERXdZalkzWVRFM05HVXlJaXdpZEdGbklqb2lJbjAlM0Q7IGV4cGlyZXM9VGh1LCAyNC1NYXItMjAyMiAwOToyOToyOCBHTVQ7IE1heC1BZ2U9NzIwMDsgcGF0aD0vOyBzYW1lc2l0ZT1sYXg=]]></stream>

[8] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[8] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U2V0LUNvb2tpZTogbGFyYXZlbF9zZXNzaW9uPWV5SnBkaUk2SWtGalNTOVVlbFpxWW1kdGVscDNVbFp3V1VaTE1rRTlQU0lzSW5aaGJIVmxJam9pYmxsSUswRnplSGxsUkVkMk5qbGtURUZqYzBKTVZrSlJNRE5wWTBzeGFIaERRamx4YWxjd1dFbFBTM2h1Wm1aalIyVjRXWEEyTDFwRlMxWlBlRmRpY0hwaE1tWlJjakpOZEc5bFJ6QjZMMWwwUmpoQmVYUlNlVkJPV1ZKRGFHRnhlVEIzYVdjclFXcFZWRmhMYXpSTmF5dDVZWFJ3YUU1MFdqZzBOemRtVURnaUxDSnRZV01pT2lKaE9ESXlPR05sTkRKbFl6RXdObVU0T1dFMVl6VXdaR1l3T0RBelptUTBORGswTXpOalpqSTNaRFV5WmpneFlXRmpZalk1WW1NNVlqUmtOREUxTUdOaElpd2lkR0ZuSWpvaUluMCUzRDsgZXhwaXJlcz1UaHUsIDI0LU1hci0yMDIyIDA5OjI5OjI4IEdNVDsgTWF4LUFnZT03MjAwOyBwYXRoPS87IGh0dHBvbmx5OyBzYW1lc2l0ZT1sYXg=]]></stream>

[8] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[8] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[8] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9InJ1Ij4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEiPgogICAgPHRpdGxlPtCQ0LTQvNC40L3QuNGB0YLRgNC40YDQvtCy0LDQvdC40LUg0LvQvtGC0L7QsjwvdGl0bGU+CgogICAgPCEtLSBCb290c3RyYXAgY29yZSBDU1MgLS0+CiAgICA8bGluayBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjEuMy9kaXN0L2Nzcy9ib290c3RyYXAubWluLmNzcyIgcmVsPSJzdHlsZXNoZWV0IgogICAgICAgICAgaW50ZWdyaXR5PSJzaGEzODQtMUJtRTRrV0JxNzhpWWhGbGR2S3VoZlRBVTZhdVU4dFQ5NFdySGZ0akRickNFWFNVMW9Cb3F5bDJRdlo2aklXMyIgY3Jvc3NvcmlnaW49ImFub255bW91cyI+Cgo8L2hlYWQ+Cjxib2R5IGNsYXNzPSJiZy1saWdodCI+CjxkaXYgY2xhc3M9ImNvbnRhaW5lciBtdC00Ij4KICAgIDxuYXY+CiAgICA8cD4KICAgICAgICA8YSBocmVmPSJodHRwOi8vbG9jYWxob3N0OjgxL2xvdHMvY3JlYXRlIiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5Ij7QlNC+0LHQsNCy0LjRgtGMINC70L7RgjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwOi8vbG9jYWxob3N0OjgxL2xvdHMiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiPtCh0L/QuNGB0L7QuiDQsNC60YLQuNCy0L3Ri9GFINC70L7RgtC+0LI8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cDovL2xvY2FsaG9zdDo4MS9maWxlcy9jcmVhdGUiIGNsYXNzPSJidG4gYnRuLXN1Y2Nlc3MiPtCU0L7QsdCw0LLQuNGC0Ywg0YTQsNC50Ls8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cDovL2xvY2FsaG9zdDo4MS9maWxlcyIgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyI+0KHQv9C40YHQvtC6INCw0LrRgtC40LLQvdGL0YUg0YTQsNC50LvQvtCyPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9sb2NhbGhvc3Q6ODEvZmlsZXR5cGUiIGNsYXNzPSJidG4gYnRuLWRhbmdlciI+0J3QsNGB0YLRgNC+0LnQutC4PC9hPgogICAgPC9wPgo8L25hdj4KICAgIAoKPC9kaXY+CjxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjEuMy9kaXN0L2pzL2Jvb3RzdHJhcC5idW5kbGUubWluLmpzIgogICAgICAgIGludGVncml0eT0ic2hhMzg0LWthN1NrMEdsbjRnbXR6Mk1sUW5pa1Qxd1hnWXNPZytPTWh1UCtJbFJIOXNFTkJPMExSbjVxKzhuYlRvdjQrMXAiCiAgICAgICAgY3Jvc3NvcmlnaW49ImFub255bW91cyI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL0Bwb3BwZXJqcy9jb3JlQDIuMTAuMi9kaXN0L3VtZC9wb3BwZXIubWluLmpzIgogICAgICAgIGludGVncml0eT0ic2hhMzg0LTcrekNOai9JcUo5NXdvMTZvTXRmc0tiWjljY0VoMzFlT3oxSEd5RHVDUTZ3Z255Sk5TWWRyUGEwM3J0UjF6ZEIiCiAgICAgICAgY3Jvc3NvcmlnaW49ImFub255bW91cyI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjEuMy9kaXN0L2pzL2Jvb3RzdHJhcC5taW4uanMiCiAgICAgICAgaW50ZWdyaXR5PSJzaGEzODQtUUpIdHZHaG1yOVhPSXBJNllWdXRHKzJRT0s5VCtabk40a3pGTjFSdEszekVGRUlzeGhsbVdsNS9ZRVN2cFoxMyIKICAgICAgICBjcm9zc29yaWdpbj0iYW5vbnltb3VzIj48L3NjcmlwdD4KPC9ib2R5Pgo8L2h0bWw+Cg==]]></stream>

[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="run" transaction_id="18" status="stopping" reason="ok"></response>

[8] [Step Debug] <- detach -i 19
[8] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="detach" transaction_id="19" status="stopping" reason="ok"></response>

[8] Log closed at 2022-03-24 07:29:28.168509

[9] Log opened at 2022-03-24 07:29:29.783438
[9] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[9] [Step Debug] INFO: Connected to debugging client: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port). :-)
[9] [Step Debug] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/public/index.php" language="PHP" xdebug:language_version="8.0.2" protocol_version="1.0" appid="9"><engine version="3.1.3"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2022 by Derick Rethans]]></copyright></init>

[9] [Step Debug] <- feature_set -i 1 -n show_hidden -v 1
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="1" feature="show_hidden" success="1"></response>

[9] [Step Debug] <- feature_set -i 2 -n max_depth -v 1
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="2" feature="max_depth" success="1"></response>

[9] [Step Debug] <- feature_set -i 3 -n max_children -v 100
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="3" feature="max_children" success="1"></response>

[9] [Step Debug] <- feature_set -i 4 -n extended_properties -v 1
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="4" feature="extended_properties" success="1"></response>

[9] [Step Debug] <- feature_set -i 5 -n notify_ok -v 1
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="5" feature="notify_ok" success="1"></response>

[9] [Step Debug] <- feature_set -i 6 -n resolved_breakpoints -v 1
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="6" feature="resolved_breakpoints" success="1"></response>

[9] [Step Debug] <- stdout -i 7 -c 1
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stdout" transaction_id="7" success="1"></response>

[9] [Step Debug] <- status -i 8
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="status" transaction_id="8" status="starting" reason="ok"></response>

[9] [Step Debug] <- step_into -i 9
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="step_into" transaction_id="9" status="break" reason="ok"><xdebug:message filename="file:///var/www/public/index.php" lineno="6"></xdebug:message></response>

[9] [Step Debug] <- eval -i 10 -- aXNzZXQoJF9TRVJWRVJbJ1BIUF9JREVfQ09ORklHJ10p
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="10"><property type="bool"><![CDATA[0]]></property></response>

[9] [Step Debug] <- eval -i 11 -- aXNzZXQoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10p
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="11"><property type="bool"><![CDATA[1]]></property></response>

[9] [Step Debug] <- eval -i 12 -- KHN0cmluZykoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10p
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="12"><property type="string" size="9" encoding="base64"><![CDATA[bG9jYWxob3N0]]></property></response>

[9] [Step Debug] <- eval -i 13 -- KHN0cmluZykoJF9TRVJWRVJbJ1NFUlZFUl9QT1JUJ10p
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="13"><property type="string" size="2" encoding="base64"><![CDATA[ODA=]]></property></response>

[9] [Step Debug] <- eval -i 14 -- KHN0cmluZykoJF9TRVJWRVJbJ1JFUVVFU1RfVVJJJ10p
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="14"><property type="string" size="1" encoding="base64"><![CDATA[Lw==]]></property></response>

[9] [Step Debug] <- breakpoint_set -i 15 -t line -f file:///var/www/app/Http/Controllers/Api/v1/InitController.php -n 27
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="breakpoint_set" transaction_id="15" id="90003" resolved="unresolved"></response>

[9] [Step Debug] <- breakpoint_set -i 16 -t call -m App\Http\Controllers\WebSiteControllers\LotController::index
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="breakpoint_set" transaction_id="16" id="90004" resolved="resolved"></response>

[9] [Step Debug] <- stack_get -i 17
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stack_get" transaction_id="17"><stack where="{main}" level="0" type="file" filename="file:///var/www/public/index.php" lineno="6"></stack></response>

[9] [Step Debug] <- run -i 18
[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[WC1Qb3dlcmVkLUJ5OiBQSFAvOC4wLjI=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTg=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[Q2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIHByaXZhdGU=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[RGF0ZTogVGh1LCAyNCBNYXIgMjAyMiAwNzoyOTozMSBHTVQ=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U2V0LUNvb2tpZTogWFNSRi1UT0tFTj1leUpwZGlJNklqaFRiRk5uVlVKRWNscFlUalprYldnemVUUklOVUU5UFNJc0luWmhiSFZsSWpvaVRYcFBVV0ZHVG1OcWNIbHZjelpzY0RKSWMyMTBlakphYkc4MmVVZHJNa0ZsVW5odWJUTTRhRFZ5ZFdaRU0yMW9ha0ZzYmt0eWIyNUtObmxoTmpKc1JGRXpOSHB0V0V4cU0yVXdZWFl6WkM5U1dVYzBiSEpFTDFGMGQzVmlOV2RQWVd0S1JXaEpUazVHWTJaVk5HMUJaVnBLWjNac1ZsUmxTRlp3ZVVGbFduY2lMQ0p0WVdNaU9pSmxPVGN3WlRCbE5UTXpNamsyWkdGbE1tWXpZek16WW1Jd01tWTVPVFkyWVRSbVpqQXdNemd4WTJVd09EQmtaakUxTUdNMVpXVXlaR0ZoTW1FeVpHUTJJaXdpZEdGbklqb2lJbjAlM0Q7IGV4cGlyZXM9VGh1LCAyNC1NYXItMjAyMiAwOToyOTozMSBHTVQ7IE1heC1BZ2U9NzIwMDsgcGF0aD0vOyBzYW1lc2l0ZT1sYXg=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[U2V0LUNvb2tpZTogbGFyYXZlbF9zZXNzaW9uPWV5SnBkaUk2SWtkV05rMTNaek5QYjBSWFMwcGlXRzE0TUVOVVUxRTlQU0lzSW5aaGJIVmxJam9pU2taRFp6ZDRlV2hNWjJ0VVYydHRNbU5TUW1Sc1FYaFdUV1ZLUTBSdFdVUkxSRU5CYTFCNlZ6VjNMMDFLWlhoR05YVkxaV05VYkdwQ2QyRjRjSEZNWXl0d1ZEbHJhRWQzUzJocE5sTnFTakl3WkhoVVkyRlFTMnh4Y3k5WlVrVjVXVXd6VEdvMWQwaGpiR0UyU0d4c1dsSnVVRUZvY25JMFlXZFFhMFpDVG1raUxDSnRZV01pT2lJNE5EQXlZemc0WmpObVlUQTBaRGxqTkRBek1EUXpPVEZqWW1JMllqQmpNbVpqWXpNeVlqQTNZalUwWVRsaU5Ua3dNRFJtTlRZellUSTNNamsyT1dJMUlpd2lkR0ZuSWpvaUluMCUzRDsgZXhwaXJlcz1UaHUsIDI0LU1hci0yMDIyIDA5OjI5OjMxIEdNVDsgTWF4LUFnZT03MjAwOyBwYXRoPS87IGh0dHBvbmx5OyBzYW1lc2l0ZT1sYXg=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[DQo=]]></stream>

[9] [Step Debug] -> <stream xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" type="stdout" encoding="base64"><![CDATA[PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9InJ1Ij4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEiPgogICAgPHRpdGxlPtCQ0LTQvNC40L3QuNGB0YLRgNC40YDQvtCy0LDQvdC40LUg0LvQvtGC0L7QsjwvdGl0bGU+CgogICAgPCEtLSBCb290c3RyYXAgY29yZSBDU1MgLS0+CiAgICA8bGluayBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjEuMy9kaXN0L2Nzcy9ib290c3RyYXAubWluLmNzcyIgcmVsPSJzdHlsZXNoZWV0IgogICAgICAgICAgaW50ZWdyaXR5PSJzaGEzODQtMUJtRTRrV0JxNzhpWWhGbGR2S3VoZlRBVTZhdVU4dFQ5NFdySGZ0akRickNFWFNVMW9Cb3F5bDJRdlo2aklXMyIgY3Jvc3NvcmlnaW49ImFub255bW91cyI+Cgo8L2hlYWQ+Cjxib2R5IGNsYXNzPSJiZy1saWdodCI+CjxkaXYgY2xhc3M9ImNvbnRhaW5lciBtdC00Ij4KICAgIDxuYXY+CiAgICA8cD4KICAgICAgICA8YSBocmVmPSJodHRwOi8vbG9jYWxob3N0OjgxL2xvdHMvY3JlYXRlIiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5Ij7QlNC+0LHQsNCy0LjRgtGMINC70L7RgjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwOi8vbG9jYWxob3N0OjgxL2xvdHMiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiPtCh0L/QuNGB0L7QuiDQsNC60YLQuNCy0L3Ri9GFINC70L7RgtC+0LI8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cDovL2xvY2FsaG9zdDo4MS9maWxlcy9jcmVhdGUiIGNsYXNzPSJidG4gYnRuLXN1Y2Nlc3MiPtCU0L7QsdCw0LLQuNGC0Ywg0YTQsNC50Ls8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cDovL2xvY2FsaG9zdDo4MS9maWxlcyIgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyI+0KHQv9C40YHQvtC6INCw0LrRgtC40LLQvdGL0YUg0YTQsNC50LvQvtCyPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9sb2NhbGhvc3Q6ODEvZmlsZXR5cGUiIGNsYXNzPSJidG4gYnRuLWRhbmdlciI+0J3QsNGB0YLRgNC+0LnQutC4PC9hPgogICAgPC9wPgo8L25hdj4KICAgIAoKPC9kaXY+CjxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjEuMy9kaXN0L2pzL2Jvb3RzdHJhcC5idW5kbGUubWluLmpzIgogICAgICAgIGludGVncml0eT0ic2hhMzg0LWthN1NrMEdsbjRnbXR6Mk1sUW5pa1Qxd1hnWXNPZytPTWh1UCtJbFJIOXNFTkJPMExSbjVxKzhuYlRvdjQrMXAiCiAgICAgICAgY3Jvc3NvcmlnaW49ImFub255bW91cyI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL0Bwb3BwZXJqcy9jb3JlQDIuMTAuMi9kaXN0L3VtZC9wb3BwZXIubWluLmpzIgogICAgICAgIGludGVncml0eT0ic2hhMzg0LTcrekNOai9JcUo5NXdvMTZvTXRmc0tiWjljY0VoMzFlT3oxSEd5RHVDUTZ3Z255Sk5TWWRyUGEwM3J0UjF6ZEIiCiAgICAgICAgY3Jvc3NvcmlnaW49ImFub255bW91cyI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjEuMy9kaXN0L2pzL2Jvb3RzdHJhcC5taW4uanMiCiAgICAgICAgaW50ZWdyaXR5PSJzaGEzODQtUUpIdHZHaG1yOVhPSXBJNllWdXRHKzJRT0s5VCtabk40a3pGTjFSdEszekVGRUlzeGhsbVdsNS9ZRVN2cFoxMyIKICAgICAgICBjcm9zc29yaWdpbj0iYW5vbnltb3VzIj48L3NjcmlwdD4KPC9ib2R5Pgo8L2h0bWw+Cg==]]></stream>

[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="run" transaction_id="18" status="stopping" reason="ok"></response>

[9] [Step Debug] <- detach -i 19
[9] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="detach" transaction_id="19" status="stopping" reason="ok"></response>

[9] Log closed at 2022-03-24 07:29:31.340476

[9] Log opened at 2022-03-24 07:36:46.572122
[9] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[9] [Step Debug] WARN: Creating socket for 'host.docker.internal:9003', poll success, but error: Operation now in progress (29).
[9] [Step Debug] ERR: Could not connect to debugging client. Tried: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port) :-(
[9] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[9] [Step Debug] WARN: Creating socket for 'host.docker.internal:9003', poll success, but error: Operation now in progress (29).
[9] [Step Debug] ERR: Could not connect to debugging client. Tried: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port) :-(
[9] Log closed at 2022-03-24 07:36:49.860751

[17] Log opened at 2022-03-24 07:37:26.778139
[17] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[17] [Step Debug] INFO: Connected to debugging client: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port). :-)
[17] [Step Debug] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/artisan" language="PHP" xdebug:language_version="8.0.2" protocol_version="1.0" appid="17"><engine version="3.1.3"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2022 by Derick Rethans]]></copyright></init>

[17] [Step Debug] <- feature_set -i 1 -n show_hidden -v 1
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="1" feature="show_hidden" success="1"></response>

[17] [Step Debug] <- feature_set -i 2 -n max_depth -v 1
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="2" feature="max_depth" success="1"></response>

[17] [Step Debug] <- feature_set -i 3 -n max_children -v 100
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="3" feature="max_children" success="1"></response>

[17] [Step Debug] <- feature_set -i 4 -n extended_properties -v 1
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="4" feature="extended_properties" success="1"></response>

[17] [Step Debug] <- feature_set -i 5 -n notify_ok -v 1
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="5" feature="notify_ok" success="1"></response>

[17] [Step Debug] <- feature_set -i 6 -n resolved_breakpoints -v 1
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="feature_set" transaction_id="6" feature="resolved_breakpoints" success="1"></response>

[17] [Step Debug] <- stdout -i 7 -c 1
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stdout" transaction_id="7" success="1"></response>

[17] [Step Debug] <- status -i 8
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="status" transaction_id="8" status="starting" reason="ok"></response>

[17] [Step Debug] <- step_into -i 9
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="step_into" transaction_id="9" status="break" reason="ok"><xdebug:message filename="file:///var/www/artisan" lineno="4"></xdebug:message></response>

[17] [Step Debug] <- eval -i 10 -- aXNzZXQoJF9TRVJWRVJbJ1BIUF9JREVfQ09ORklHJ10p
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="10"><property type="bool"><![CDATA[0]]></property></response>

[17] [Step Debug] <- eval -i 11 -- aXNzZXQoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10p
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="11"><property type="bool"><![CDATA[0]]></property></response>

[17] [Step Debug] <- eval -i 12 -- aXNzZXQoJF9TRVJWRVJbJ1NTSF9DT05ORUNUSU9OJ10p
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="12"><property type="bool"><![CDATA[0]]></property></response>

[17] [Step Debug] <- eval -i 13 -- aXNzZXQoJF9TRVJWRVJbJ1NFUlZFUl9BRERSJ10p
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="eval" transaction_id="13"><property type="bool"><![CDATA[0]]></property></response>

[17] [Step Debug] <- breakpoint_set -i 14 -t line -f file:///Users/urij/Documents/projects/tgBotCrypto/app/Http/Controllers/Api/v1/InitController.php -n 27
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="breakpoint_set" transaction_id="14" id="170001" resolved="unresolved"></response>

[17] [Step Debug] <- breakpoint_set -i 15 -t call -m App\Http\Controllers\WebSiteControllers\LotController::index
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="breakpoint_set" transaction_id="15" id="170002" resolved="resolved"></response>

[17] [Step Debug] <- stack_get -i 16
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stack_get" transaction_id="16"><stack where="{main}" level="0" type="file" filename="file:///var/www/artisan" lineno="4"></stack></response>

[17] [Step Debug] <- stack_get -i 17
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stack_get" transaction_id="17"><stack where="{main}" level="0" type="file" filename="file:///var/www/artisan" lineno="4"></stack></response>

[17] [Step Debug] <- context_names -i 18
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="context_names" transaction_id="18"><context name="Locals" id="0"></context><context name="Superglobals" id="1"></context><context name="User defined constants" id="2"></context></response>

[17] [Step Debug] <- context_get -i 19 -d 0 -c 0
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="context_get" transaction_id="19" context="0"><property name="$app" fullname="$app" type="uninitialized"></property><property name="$input" fullname="$input" type="uninitialized"></property><property name="$kernel" fullname="$kernel" type="uninitialized"></property><property name="$status" fullname="$status" type="uninitialized"></property></response>

[17] [Step Debug] <- context_get -i 20 -d 0 -c 1
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="context_get" transaction_id="20" context="1"><property name="$_COOKIE" fullname="$_COOKIE" type="array" children="0" numchildren="0" page="0" pagesize="100"></property><property name="$_ENV" fullname="$_ENV" type="array" children="1" numchildren="18" page="0" pagesize="100"><property name="HOSTNAME" fullname="$_ENV[&quot;HOSTNAME&quot;]" type="string" size="12" encoding="base64"><![CDATA[MWM2Y2JlZjQ3M2Jk]]></property><property name="PHP_VERSION" fullname="$_ENV[&quot;PHP_VERSION&quot;]" type="string" size="5" encoding="base64"><![CDATA[OC4wLjI=]]></property><property name="PHP_INI_DIR" fullname="$_ENV[&quot;PHP_INI_DIR&quot;]" type="string" size="18" encoding="base64"><![CDATA[L3Vzci9sb2NhbC9ldGMvcGhw]]></property><property name="GPG_KEYS" fullname="$_ENV[&quot;GPG_KEYS&quot;]" type="string" size="81" encoding="base64"><![CDATA[MTcyOUY4MzkzOERBNDRFMjdCQTBGNEQzREJEQjM5NzQ3MEQxMjE3MiBCRkRERDI4NjQyODI0RjgxMThFRjc3OTA5QjY3QTVDMTIyMjkxMThG]]></property><property name="PHP_LDFLAGS" fullname="$_ENV[&quot;PHP_LDFLAGS&quot;]" type="string" size="12" encoding="base64"><![CDATA[LVdsLC1PMSAtcGll]]></property><property name="PWD" fullname="$_ENV[&quot;PWD&quot;]" type="string" size="8" encoding="base64"><![CDATA[L3Zhci93d3c=]]></property><property name="HOME" fullname="$_ENV[&quot;HOME&quot;]" type="string" size="5" encoding="base64"><![CDATA[L3Jvb3Q=]]></property><property name="PHP_SHA256" fullname="$_ENV[&quot;PHP_SHA256&quot;]" type="string" size="64" encoding="base64"><![CDATA[ODRkZDZlMzZmNDhjM2E3MWZmNWRjZWJhMzc1YzFmNmIzNGI3MWQ0ZmE5ZTA2YjcyMDc4MDEyNzE3NjQ2OGNjYw==]]></property><property type="string" size="76"><name encoding="base64"><![CDATA[UEhQSVpFX0RFUFM=]]></name><fullname encoding="base64"><![CDATA[JF9FTlZbIlBIUElaRV9ERVBTIl0=]]></fullname><value encoding="base64"><![CDATA[YXV0b2NvbmYgCQlkcGtnLWRldiAJCWZpbGUgCQlnKysgCQlnY2MgCQlsaWJjLWRldiAJCW1ha2UgCQlwa2ctY29uZmlnIAkJcmUyYw==]]></value></property><property name="TERM" fullname="$_ENV[&quot;TERM&quot;]" type="string" size="5" encoding="base64"><![CDATA[eHRlcm0=]]></property><property name="PHP_URL" fullname="$_ENV[&quot;PHP_URL&quot;]" type="string" size="54" encoding="base64"><![CDATA[aHR0cHM6Ly93d3cucGhwLm5ldC9kaXN0cmlidXRpb25zL3BocC04LjAuMi50YXIueHo/YT0x]]></property><property name="PHP_EXTRA_CONFIGURE_ARGS" fullname="$_ENV[&quot;PHP_EXTRA_CONFIGURE_ARGS&quot;]" type="string" size="77" encoding="base64"><![CDATA[LS1lbmFibGUtZnBtIC0td2l0aC1mcG0tdXNlcj13d3ctZGF0YSAtLXdpdGgtZnBtLWdyb3VwPXd3dy1kYXRhIC0tZGlzYWJsZS1jZ2k=]]></property><property name="SHLVL" fullname="$_ENV[&quot;SHLVL&quot;]" type="string" size="1" encoding="base64"><![CDATA[MQ==]]></property><property name="PHP_CFLAGS" fullname="$_ENV[&quot;PHP_CFLAGS&quot;]" type="string" size="83" encoding="base64"><![CDATA[LWZzdGFjay1wcm90ZWN0b3Itc3Ryb25nIC1mcGljIC1mcGllIC1PMiAtRF9MQVJHRUZJTEVfU09VUkNFIC1EX0ZJTEVfT0ZGU0VUX0JJVFM9NjQ=]]></property><property name="PATH" fullname="$_ENV[&quot;PATH&quot;]" type="string" size="60" encoding="base64"><![CDATA[L3Vzci9sb2NhbC9zYmluOi91c3IvbG9jYWwvYmluOi91c3Ivc2JpbjovdXNyL2Jpbjovc2JpbjovYmlu]]></property><property name="PHP_ASC_URL" fullname="$_ENV[&quot;PHP_ASC_URL&quot;]" type="string" size="58" encoding="base64"><![CDATA[aHR0cHM6Ly93d3cucGhwLm5ldC9kaXN0cmlidXRpb25zL3BocC04LjAuMi50YXIueHouYXNjP2E9MQ==]]></property><property name="PHP_CPPFLAGS" fullname="$_ENV[&quot;PHP_CPPFLAGS&quot;]" type="string" size="83" encoding="base64"><![CDATA[LWZzdGFjay1wcm90ZWN0b3Itc3Ryb25nIC1mcGljIC1mcGllIC1PMiAtRF9MQVJHRUZJTEVfU09VUkNFIC1EX0ZJTEVfT0ZGU0VUX0JJVFM9NjQ=]]></property><property name="_" fullname="$_ENV[&quot;_&quot;]" type="string" size="18" encoding="base64"><![CDATA[L3Vzci9sb2NhbC9iaW4vcGhw]]></property></property><property name="$_FILES" fullname="$_FILES" type="array" children="0" numchildren="0" page="0" pagesize="100"></property><property name="$_GET" fullname="$_GET" type="array" children="0" numchildren="0" page="0" pagesize="100"></property><property name="$_POST" fullname="$_POST" type="array" children="0" numchildren="0" page="0" pagesize="100"></property><property name="$_REQUEST" fullname="$_REQUEST" type="array" children="0" numchildren="0" page="0" pagesize="100"></property><property name="$_SERVER" fullname="$_SERVER" type="array" children="1" numchildren="27" page="0" pagesize="100"><property name="HOSTNAME" fullname="$_SERVER[&quot;HOSTNAME&quot;]" type="string" size="12" encoding="base64"><![CDATA[MWM2Y2JlZjQ3M2Jk]]></property><property name="PHP_VERSION" fullname="$_SERVER[&quot;PHP_VERSION&quot;]" type="string" size="5" encoding="base64"><![CDATA[OC4wLjI=]]></property><property name="PHP_INI_DIR" fullname="$_SERVER[&quot;PHP_INI_DIR&quot;]" type="string" size="18" encoding="base64"><![CDATA[L3Vzci9sb2NhbC9ldGMvcGhw]]></property><property name="GPG_KEYS" fullname="$_SERVER[&quot;GPG_KEYS&quot;]" type="string" size="81" encoding="base64"><![CDATA[MTcyOUY4MzkzOERBNDRFMjdCQTBGNEQzREJEQjM5NzQ3MEQxMjE3MiBCRkRERDI4NjQyODI0RjgxMThFRjc3OTA5QjY3QTVDMTIyMjkxMThG]]></property><property name="PHP_LDFLAGS" fullname="$_SERVER[&quot;PHP_LDFLAGS&quot;]" type="string" size="12" encoding="base64"><![CDATA[LVdsLC1PMSAtcGll]]></property><property name="PWD" fullname="$_SERVER[&quot;PWD&quot;]" type="string" size="8" encoding="base64"><![CDATA[L3Zhci93d3c=]]></property><property name="HOME" fullname="$_SERVER[&quot;HOME&quot;]" type="string" size="5" encoding="base64"><![CDATA[L3Jvb3Q=]]></property><property name="PHP_SHA256" fullname="$_SERVER[&quot;PHP_SHA256&quot;]" type="string" size="64" encoding="base64"><![CDATA[ODRkZDZlMzZmNDhjM2E3MWZmNWRjZWJhMzc1YzFmNmIzNGI3MWQ0ZmE5ZTA2YjcyMDc4MDEyNzE3NjQ2OGNjYw==]]></property><property type="string" size="76"><name encoding="base64"><![CDATA[UEhQSVpFX0RFUFM=]]></name><fullname encoding="base64"><![CDATA[JF9TRVJWRVJbIlBIUElaRV9ERVBTIl0=]]></fullname><value encoding="base64"><![CDATA[YXV0b2NvbmYgCQlkcGtnLWRldiAJCWZpbGUgCQlnKysgCQlnY2MgCQlsaWJjLWRldiAJCW1ha2UgCQlwa2ctY29uZmlnIAkJcmUyYw==]]></value></property><property name="TERM" fullname="$_SERVER[&quot;TERM&quot;]" type="string" size="5" encoding="base64"><![CDATA[eHRlcm0=]]></property><property name="PHP_URL" fullname="$_SERVER[&quot;PHP_URL&quot;]" type="string" size="54" encoding="base64"><![CDATA[aHR0cHM6Ly93d3cucGhwLm5ldC9kaXN0cmlidXRpb25zL3BocC04LjAuMi50YXIueHo/YT0x]]></property><property name="PHP_EXTRA_CONFIGURE_ARGS" fullname="$_SERVER[&quot;PHP_EXTRA_CONFIGURE_ARGS&quot;]" type="string" size="77" encoding="base64"><![CDATA[LS1lbmFibGUtZnBtIC0td2l0aC1mcG0tdXNlcj13d3ctZGF0YSAtLXdpdGgtZnBtLWdyb3VwPXd3dy1kYXRhIC0tZGlzYWJsZS1jZ2k=]]></property><property name="SHLVL" fullname="$_SERVER[&quot;SHLVL&quot;]" type="string" size="1" encoding="base64"><![CDATA[MQ==]]></property><property name="PHP_CFLAGS" fullname="$_SERVER[&quot;PHP_CFLAGS&quot;]" type="string" size="83" encoding="base64"><![CDATA[LWZzdGFjay1wcm90ZWN0b3Itc3Ryb25nIC1mcGljIC1mcGllIC1PMiAtRF9MQVJHRUZJTEVfU09VUkNFIC1EX0ZJTEVfT0ZGU0VUX0JJVFM9NjQ=]]></property><property name="PATH" fullname="$_SERVER[&quot;PATH&quot;]" type="string" size="60" encoding="base64"><![CDATA[L3Vzci9sb2NhbC9zYmluOi91c3IvbG9jYWwvYmluOi91c3Ivc2JpbjovdXNyL2Jpbjovc2JpbjovYmlu]]></property><property name="PHP_ASC_URL" fullname="$_SERVER[&quot;PHP_ASC_URL&quot;]" type="string" size="58" encoding="base64"><![CDATA[aHR0cHM6Ly93d3cucGhwLm5ldC9kaXN0cmlidXRpb25zL3BocC04LjAuMi50YXIueHouYXNjP2E9MQ==]]></property><property name="PHP_CPPFLAGS" fullname="$_SERVER[&quot;PHP_CPPFLAGS&quot;]" type="string" size="83" encoding="base64"><![CDATA[LWZzdGFjay1wcm90ZWN0b3Itc3Ryb25nIC1mcGljIC1mcGllIC1PMiAtRF9MQVJHRUZJTEVfU09VUkNFIC1EX0ZJTEVfT0ZGU0VUX0JJVFM9NjQ=]]></property><property name="_" fullname="$_SERVER[&quot;_&quot;]" type="string" size="18" encoding="base64"><![CDATA[L3Vzci9sb2NhbC9iaW4vcGhw]]></property><property name="PHP_SELF" fullname="$_SERVER[&quot;PHP_SELF&quot;]" type="string" size="7" encoding="base64"><![CDATA[YXJ0aXNhbg==]]></property><property name="SCRIPT_NAME" fullname="$_SERVER[&quot;SCRIPT_NAME&quot;]" type="string" size="7" encoding="base64"><![CDATA[YXJ0aXNhbg==]]></property><property name="SCRIPT_FILENAME" fullname="$_SERVER[&quot;SCRIPT_FILENAME&quot;]" type="string" size="7" encoding="base64"><![CDATA[YXJ0aXNhbg==]]></property><property name="PATH_TRANSLATED" fullname="$_SERVER[&quot;PATH_TRANSLATED&quot;]" type="string" size="7" encoding="base64"><![CDATA[YXJ0aXNhbg==]]></property><property name="DOCUMENT_ROOT" fullname="$_SERVER[&quot;DOCUMENT_ROOT&quot;]" type="string" size="0" encoding="base64"><![CDATA[]]></property><property name="REQUEST_TIME_FLOAT" fullname="$_SERVER[&quot;REQUEST_TIME_FLOAT&quot;]" type="float"><![CDATA[1648107446.7784]]></property><property name="REQUEST_TIME" fullname="$_SERVER[&quot;REQUEST_TIME&quot;]" type="int"><![CDATA[1648107446]]></property><property name="argv" fullname="$_SERVER[&quot;argv&quot;]" type="array" children="1" numchildren="3"></property><property name="argc" fullname="$_SERVER[&quot;argc&quot;]" type="int"><![CDATA[3]]></property></property></response>

[17] [Step Debug] <- context_get -i 21 -d 0 -c 2
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="context_get" transaction_id="21" context="2"></response>

[17] [Step Debug] <- stop -i 22
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stop" transaction_id="22" status="stopped" reason="ok"></response>

[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="stop" transaction_id="22" status="stopping" reason="ok"></response>

[17] [Step Debug] <- detach -i 23
[17] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" command="detach" transaction_id="23" status="stopping" reason="ok"></response>

[17] Log closed at 2022-03-24 07:37:30.674849

[18] Log opened at 2022-03-24 07:37:34.387436
[18] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[18] [Step Debug] INFO: Connected to debugging client: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port). :-)
[18] [Step Debug] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/artisan" language="PHP" xdebug:language_version="8.0.2" protocol_version="1.0" appid="18"><engine version="3.1.3"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2022 by Derick Rethans]]></copyright></init>

[10] Log opened at 2022-03-24 07:37:39.663160
[10] [Step Debug] INFO: Connecting to configured address/port: host.docker.internal:9003.
[10] [Step Debug] INFO: Connected to debugging client: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port). :-)
[10] [Step Debug] -> <init xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" fileuri="file:///var/www/public/index.php" language="PHP" xdebug:language_version="8.0.2" protocol_version="1.0" appid="10"><engine version="3.1.3"><![CDATA[Xdebug]]></engine><author><![CDATA[Derick Rethans]]></author><url><![CDATA[https://xdebug.org]]></url><copyright><![CDATA[Copyright (c) 2002-2022 by Derick Rethans]]></copyright></init>

[10] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" status="stopping" reason="ok"></response>

[10] [Step Debug] WARN: 2022-03-24 07:48:04.106131: There was a problem sending 179 bytes on socket 6: Broken pipe.
[10] Log closed at 2022-03-24 07:48:04.108949

[18] [Step Debug] -> <response xmlns="urn:debugger_protocol_v1" xmlns:xdebug="https://xdebug.org/dbgp/xdebug" status="stopping" reason="ok"></response>

[18] [Step Debug] WARN: 2022-03-24 07:48:07.066698: There was a problem sending 179 bytes on socket 3: Broken pipe.
[18] Log closed at 2022-03-24 07:48:07.068978

